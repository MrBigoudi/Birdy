[{"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/index.js":"1","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/App.js":"2","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/routes.js":"3","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Not-found.js":"4","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Profile.js":"5","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Login.js":"6","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/Loading.js":"7","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Signup.js":"8","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Dashboard.js":"9","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/Birdy-logo.js":"10","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/errorMessages.js":"11","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/database/tweets.js":"12","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/database/users.js":"13","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/NavBar/NavBar.js":"14","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SideBar.js":"15","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Timeline.js":"16","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/date.js":"17","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/NavBar/MenuIcon.js":"18","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SearchBar.js":"19","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/NewTweet.js":"20","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js":"21","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/TweetDeleted.js":"22","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/TweetIcon.js":"23","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/CustomLink.js":"24"},{"size":202,"mtime":1650269897433,"results":"25","hashOfConfig":"26"},{"size":1101,"mtime":1651500308361,"results":"27","hashOfConfig":"26"},{"size":166,"mtime":1651428117448,"results":"28","hashOfConfig":"26"},{"size":299,"mtime":1650269897433,"results":"29","hashOfConfig":"26"},{"size":2792,"mtime":1651507516679,"results":"30","hashOfConfig":"26"},{"size":4555,"mtime":1651504233345,"results":"31","hashOfConfig":"26"},{"size":290,"mtime":1650269897433,"results":"32","hashOfConfig":"26"},{"size":6464,"mtime":1651500950517,"results":"33","hashOfConfig":"26"},{"size":1789,"mtime":1651677235130,"results":"34","hashOfConfig":"26"},{"size":139,"mtime":1650269897433,"results":"35","hashOfConfig":"26"},{"size":300,"mtime":1651428817694,"results":"36","hashOfConfig":"26"},{"size":1472,"mtime":1650269897433,"results":"37","hashOfConfig":"26"},{"size":5457,"mtime":1650269897433,"results":"38","hashOfConfig":"26"},{"size":806,"mtime":1650269897433,"results":"39","hashOfConfig":"26"},{"size":939,"mtime":1650269897433,"results":"40","hashOfConfig":"26"},{"size":3136,"mtime":1651678919503,"results":"41","hashOfConfig":"26"},{"size":112,"mtime":1650269897433,"results":"42","hashOfConfig":"26"},{"size":406,"mtime":1650269897433,"results":"43","hashOfConfig":"26"},{"size":604,"mtime":1650269897433,"results":"44","hashOfConfig":"26"},{"size":4744,"mtime":1651506216232,"results":"45","hashOfConfig":"26"},{"size":4740,"mtime":1651679726447,"results":"46","hashOfConfig":"26"},{"size":700,"mtime":1650269897433,"results":"47","hashOfConfig":"26"},{"size":483,"mtime":1650269897433,"results":"48","hashOfConfig":"26"},{"size":201,"mtime":1650269897433,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1v2kmjr",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"53"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/index.js",[],[],["129","130"],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/App.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/routes.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Not-found.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Profile.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Login.js",["131","132"],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/Loading.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Signup.js",["133","134","135"],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Dashboard.js",[],[],["136","137"],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/Birdy-logo.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/errorMessages.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/database/tweets.js",["138","139"],[],"import { User, users } from \"./users.js\";\n\nimport * as DATE from \"../constants/date.js\";\n\nexport class Tweet{\n    static #PRIVATE_ID_GENERATOR = 0;\n    #id = `tweet${++Tweet.#PRIVATE_ID_GENERATOR}`;\n    #author; //a user\n    #content;\n    #image;\n    #comments = []; //array of tweet id\n    #nbReplies = 0;\n    #nbRetweets = 0;\n    #nbLikes = 0\n    #creationDate = new Date();\n    \n    constructor(author, content, image){\n        this.#author = author;\n        this.#content = content;\n        this.#image = image;  \n    }\n\n    getId(){return this.#id;}\n    getAuthor(){return this.#author;}\n    getContent(){return this.#content;}\n    getImage(){return this.#image;}\n    getComments(){return this.#comments;}\n    getNbReplies(){return this.#nbReplies;}\n    getNbRetweets(){return this.#nbRetweets;}\n    getNbLikes(){return this.#nbLikes;}\n    getCreationDate(){\n        let month = DATE.MONTHS[this.#creationDate.getMonth()];\n        let day = this.#creationDate.getDay();\n        return `${month} ${day}`;\n    }\n\n    addLike(){this.#nbLikes++;}\n    addRetweet(){this.#nbRetweets++;}\n    addReply(){this.#nbReplies++;}\n\n    removeLike(){this.#nbLikes--;}\n    removeRetweet(){this.#nbRetweets--;}\n    removeReply(){this.#nbReplies--;}\n\n}\n\nexport const tweets = [];\n\n//temporary\nfor (let i=0; i<20; i++){    \n    const usr = Math.floor(Math.random()*users.length);\n    users[usr].createTweet(`test tweet ${i}`, \"\");\n}\n\nusers[0].createTweet(\"test www.google.com test\", \"\");","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/database/users.js",["140","141"],[],"import * as ERROR_MSG from \"../constants/errorMessages.js\";\n\nimport { Tweet, tweets } from \"./tweets.js\";\n\nimport DEFAULT_PP from \"../images/icons/outline_account_circle_white_36dp_2x.png\";\n\n//import DEFAULT_PROFILE_PICTURE from \"../images/icons/navBarIcons/outline_home_white_24dp_2x.png\";\n\nexport class User{\n    static #PRIVATE_ID_GENERATOR = 0;\n    #id = `user${++User.#PRIVATE_ID_GENERATOR}`;\n    #username;\n    #fullname;\n    #dateOfBirth;\n    #emailAddress;\n    #passwd;\n    #following = []; //array of user id\n    #followers = []; //array of user id\n    #tweets = []; //array of tweet id\n    #profilePicture = DEFAULT_PP;\n    #dateCreated = new Date();\n    \n    constructor(username, fullname, dateOfBirth, emailAddress, passwd){\n        this.#username = username;\n        this.#fullname = fullname;\n        this.#dateOfBirth = dateOfBirth;\n        this.#emailAddress = emailAddress;\n        this.#passwd = passwd;   \n    }\n\n    getId(){return this.#id;}\n    getUsername(){return this.#username;}\n    getFullname(){return this.#fullname;}\n    getDateOfBirth(){return this.#dateOfBirth;}\n    getEmailAddress(){return this.#emailAddress;}\n    getFollowing(){return this.#following;}\n    getFollowers(){return this.#followers;}\n    getTweets(){return this.#tweets;}\n    getProfilePicture(){return this.#profilePicture;}\n    getDateCreated(){return this.#dateCreated;}\n\n    checkEmailAddress(emailAddress){\n        return emailAddress.toLowerCase() === this.#emailAddress.toLowerCase();\n    }\n    checkPasswd(passwd){\n        return passwd === this.#passwd;\n    }\n    checkUsername(username){\n        return username.toLowerCase() === this.#username.toLowerCase();\n    }\n\n    createTweet(content, image){\n        let twt = new Tweet(this, content, image);\n        this.#tweets.unshift(twt);\n        tweets.unshift(twt);//global tweet array\n    }\n}\n\n/**\n * generate a random string of size n\n **/\nfunction genRandomString(n){\n    let res = \"\";\n    for (let i=0; i<n; i++){\n        const random = Math.floor(Math.random()*26);\n        res += String.fromCharCode(97+random);\n    }\n    return res;\n}\n\nfunction genRandomName(){\n    return genRandomString(Math.floor(Math.random()*8 + 3))//names size between 3 and 10\n}\n\nfunction genRandomFullName(){\n    return `${genRandomName()} ${genRandomName()}`;\n}\n\nfunction genRandomEmailAddress(fullname){\n    const domains = [\"gmail\", \"yahoo\", \"hotmail\"];\n    const dots = [\"com\", \"net\", \"fr\"];\n    const domain = domains[Math.floor(Math.random()*domains.length)];\n    const dot = dots[Math.floor(Math.random()*dots.length)];\n    const names = fullname.split(\" \");\n    return `${names[0]}.${names[1]}@${domain}.${dot}`;\n}\n\nfunction genRandomDate(start, end){\n    return new Date(+start + Math.random() * (end-start)).toDateString();\n}\n\nfunction genRandomUser(){\n    const username = genRandomName();\n    const fullname = genRandomFullName();\n    const dateOfBirth = genRandomDate(new Date(1900, 1), new Date(2022, 12));\n    const emailAddress = genRandomEmailAddress(fullname);\n    const passwd = genRandomName();\n\n    return new User(username, fullname, dateOfBirth, emailAddress, passwd);\n}\n\nfunction genRandomUsers(n){\n    let usersTmp = []\n    for (let i=0; i<n; i++){\n        usersTmp.push(genRandomUser());\n    }\n    return usersTmp;\n}\n\nexport function checkLogin(emailAddress, passwd){\n    return new Promise( (resolve, reject) => {\n        let valid = true;\n        let msg = \"\";\n        let username = \"\";\n        //console.log(users);\n        for (let user of users){\n            if (user.checkEmailAddress(emailAddress)){\n                if(user.checkPasswd(passwd)){\n                    username = user.getUsername();\n                    break;\n                }\n                msg = ERROR_MSG.WRONG_PASSWD;\n                valid = false;\n                break;\n            }\n        }\n\n        if(username === \"\" && msg === \"\"){\n            msg = ERROR_MSG.WRONG_EMAIL;\n            valid = false;\n        }\n\n        /* gestion de la promesse */\n        if(valid){\n            resolve(username);\n        }\n        else{\n            reject(Error(msg));\n        }\n    }); \n}\n\nexport function checkAlreadyExist(username, emailAddress){\n    return new Promise( (resolve, reject) => {\n        let valid = true;\n        let msg = \"\";\n        //console.log(users);\n        for (let user of users){\n            if (user.checkEmailAddress(emailAddress)){\n                msg = ERROR_MSG.EMAIL_TAKEN;\n                valid = false;\n                break;\n            }\n            if (user.checkUsername(username)){\n                msg = ERROR_MSG.USERNAME_TAKEN;\n                valid = false;\n                break;\n            }\n        }\n\n        /* gestion de la promesse */\n        if(valid){\n            resolve(username);\n        }\n        else{\n            reject(Error(msg));\n        }\n    }); \n}\n\nexport function addUserFromSignup(formdata){\n    const usr = new User(formdata.username, formdata.fullname, formdata.dateOfBirth,\n        formdata.emailAddress, formdata.password);    \n    addUserToDataBase(usr);\n    //console.log(users);\n}\n\nfunction addUserToDataBase(user){\n    users.push(user);\n}\n\nexport const users = [\n    new User(\"mrBigoudi\", \"Yannis Kedadry\", \"Tue May 12 2000\", \"yayakeda94490@gmail.com\", \"yep\"),\n    new User(\"karl\", \"Karl Hadwen\", \"Fri Dec 10 1965\", \"karlhadwen@gmail.com\", \"1234\"),\n    new User(\"raphael\", \"Raffaello Sanzio\", \"Fri Dec 10 1965\", \"raphael@sanzio.com\", \"0000\")\n];","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/NavBar/NavBar.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SideBar.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Timeline.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/constants/date.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/NavBar/MenuIcon.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SearchBar.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/NewTweet.js",["142"],[],"import React, { useState } from \"react\";\n\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\n\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\";\n\nexport default function NewTweet(props){\n\n    const initTweetContent = {text:\"\", image:\"\", imageDom:\"\", gifDom:\"\"}\n    const [tweetContent, setTweetContent] = useState(initTweetContent);\n\n    const [error, setError] = useState(true);\n\n    const handlePostTweet = async (event) => {\n        //console.log(\"handlePostTweet\");\n        event.preventDefault();\n        //console.log(tweetContent);\n        if(!error){\n            await props.user.createTweet(tweetContent.text, tweetContent.image);\n            clearNewTweet();\n            props.onPost(event);\n        }\n    }\n\n    function resetError(){\n        setError(prev => {\n            if(tweetContent.text!==\"\" || tweetContent.image!==\"\"){\n                return false;\n            }\n            return true;\n        });\n    }\n\n    function removeError(){\n        setError(false);\n    }\n\n    function handleChange(event){\n        setTweetContent( prev => {\n            //console.log(\"[\",event.target.name,\",\",event.target.value,\"]\");\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            };\n        });\n        //console.log(\"onChange: error?\", error);\n        resetError();\n    };\n\n    function onImageChange(event){\n        if(event.target.files && event.target.files[0]){\n            const img = event.target.files[0];\n            //console.log(img);\n            //console.log(URL.createObjectURL(img));\n            setTweetContent( prev => {\n                return {\n                    ...prev,\n                    image: URL.createObjectURL(img)\n                };\n            });\n        }\n        //console.log(\"onImage: error?\", error);\n        removeError();\n    }\n\n    function clearNewTweet(){\n        setTweetContent(prev => {return initTweetContent;});\n        setError(prev => true);\n    }\n\n    return(\n        <div id=\"new-tweet\" className=\"tweet new-tweet\">\n            <div className=\"left-side-tweet\">\n            <img src={props.user['profilePicture']!==\"\" ? props.user['profilePicture'] : DEFAULT_PP}\n                    alt=\"profile picture\"\n                    height=\"70\" width=\"70\"\n                />\n            </div>\n            <div className=\"new-tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold huge-font\">\n                        {props.user['username']}\n                    </span>\n                </header>\n                <form>\n                    <div className=\"tweet-content\">\n                        {tweetContent.image!==\"\" && <img className=\"tweet-image\" src={tweetContent.image} width={\"250px\"} alt=\"not found\"/>}\n                        <textarea className=\"new-tweet-text\" \n                            placeholder=\"What's happening ?\" required \n                            maxLength=\"140\" rows=\"2\"\n                            name=\"text\"\n                            onChange={handleChange}\n                            value={tweetContent.text}\n                        />\n                    </div>\n                    <footer className=\"tweet-footer\">\n                        <div className=\"new-tweet-icons\">\n                            <label className=\"small-font new-tweet-button pointer\" htmlFor=\"imageFile\">Img</label>\n                            <input \n                                type=\"file\" name=\"imageDom\" id=\"imageFile\" \n                                className=\"display-none\" \n                                accept=\"image/png\"\n                                onChange={(event) => {handleChange(event); onImageChange(event);}}\n                                value={tweetContent.imageDom}\n                            />\n                            <label className=\"small-font new-tweet-button pointer\" htmlFor=\"gifFile\">Gif</label>\n                            <input \n                                type=\"file\" name=\"gifDom\" id=\"gifFile\" \n                                className=\"display-none\" \n                                accept=\"image/gif\"\n                                onChange={(event) => {handleChange(event); onImageChange(event);}}\n                                value={tweetContent.gifDom}\n                            />\n                        </div>\n                        <input className=\"small-font new-tweet-button pointer\" onClick={ (event) => handlePostTweet(event) } type=\"button\" value=\"Tweet\"/>\n                    </footer>\n                </form>\n            </div>\n        </div>\n    )\n}",["143","144"],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js",["145","146"],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/TweetDeleted.js",["147"],[],"import React, { useState } from \"react\";\n\nimport \"../../stylesheets/components/tweet.css\";\n\nexport default function TweetDeleted(props){\n\n    const [deleted, setDeleted] = useState(props.deleted);\n\n    function handleDelete(event){\n        //console.log(\"handleDelete\");\n        setDeleted (prev => {\n            return !prev;\n        })\n        return props.id;\n    }\n\n    return (\n        <article className=\"tweet tweet-deleted\">\n            <span className=\"tweet-del-msg color-light-grey\">This tweet has been successfully hidden</span>\n            <input className=\"tweet-del-res\" type=\"button\" value=\"Res\" onClick={(event) => props.onDelete(event, handleDelete())} />\n        </article>\n    )\n}","/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/TweetIcon.js",[],[],"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/atomComponents/CustomLink.js",[],[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":112,"column":61,"nodeType":"154","messageId":"155","endLine":112,"endColumn":63},{"ruleId":"152","severity":1,"message":"153","line":112,"column":81,"nodeType":"154","messageId":"155","endLine":112,"endColumn":83},{"ruleId":"156","severity":1,"message":"157","line":14,"column":11,"nodeType":"158","messageId":"159","endLine":14,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":163,"column":61,"nodeType":"154","messageId":"155","endLine":163,"endColumn":63},{"ruleId":"152","severity":1,"message":"153","line":163,"column":81,"nodeType":"154","messageId":"155","endLine":163,"endColumn":83},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},{"ruleId":"156","severity":1,"message":"162","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":7,"column":21,"nodeType":"158","messageId":"165","endLine":7,"endColumn":26},{"ruleId":"163","severity":1,"message":"166","line":11,"column":20,"nodeType":"158","messageId":"165","endLine":11,"endColumn":24},{"ruleId":"156","severity":1,"message":"167","line":102,"column":10,"nodeType":"158","messageId":"159","endLine":102,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":76,"column":13,"nodeType":"170","endLine":79,"endColumn":19},{"ruleId":"148","replacedBy":"171"},{"ruleId":"150","replacedBy":"172"},{"ruleId":"156","severity":1,"message":"173","line":24,"column":12,"nodeType":"158","messageId":"159","endLine":24,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":84,"column":17,"nodeType":"170","endLine":87,"endColumn":19},{"ruleId":"156","severity":1,"message":"173","line":7,"column":12,"nodeType":"158","messageId":"159","endLine":7,"endColumn":19},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'server_config' is assigned a value but never used.","Identifier","unusedVar",["174"],["175"],"'User' is defined but never used.","no-use-before-define","'Tweet' was used before it was defined.","usedBeforeDefined","'User' was used before it was defined.","'genRandomUsers' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["174"],["175"],"'deleted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]