{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AutoLink from \"react-native-autolink\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CustomLink from \"../../atomComponents/CustomLink.js\";\nimport TweetIcon from \"./TweetIcon.js\";\nimport COMMENT_ICON from \"../../images/icons/tweetIcons/outline_chat_bubble_outline_white_18dp_1x.png\";\nimport RETWEET_ICON from \"../../images/icons/tweetIcons/outline_reply_white_18dp_1x.png\";\nimport LIKE_ICON from \"../../images/icons/tweetIcons/outline_favorite_border_white_18dp_1x.png\";\nimport SHARE_ICON from \"../../images/icons/tweetIcons/outline_file_upload_white_18dp_1x.png\";\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\"; //a tweet as a prop\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tweet(props) {\n  _s();\n\n  const [nbReplies, setNbReplies] = useState([props.tweet['nbComments'], false]);\n  const [nbRetweets, setNbRetweets] = useState([props.tweet['nbRetweets'], false]);\n  const [nbLikes, setNbLikes] = useState([props.tweet['nbLikes'], false]);\n  const [deleted, setDeleted] = useState(props.deleted);\n  const [author, setAuthor] = useState(async () => {\n    await axios.get(`/api/user/${props.tweet['author']}`).then(res => {\n      //console.log('user: ', res.data);\n      setAuthor(res.data);\n    });\n  });\n\n  function handleDelete(event) {\n    //console.log(\"handleDelete\");\n    setDeleted(prev => {\n      return !prev;\n    });\n    return props.id;\n  }\n\n  function handleReplyChange(event) {\n    setNbReplies(prev => {\n      let replied = nbReplies[1];\n      if (!replied) props.tweet.addReply();else props.tweet.removeReply();\n      return [props.tweet.getNbReplies(), !replied];\n    });\n  }\n\n  function handleRetweetChange(event) {\n    setNbRetweets(prev => {\n      let retweeted = nbRetweets[1];\n      if (!retweeted) props.tweet.addRetweet();else props.tweet.removeRetweet();\n      return [props.tweet.getNbRetweets(), !retweeted];\n    });\n  }\n\n  async function handleLikeChange(event) {\n    event.preventDefault();\n    console.log('tweet: ', props.tweet);\n    let userId = props.tweet['author'];\n    let tweetId = '';\n    await axios.post(\"/apiTweet/tweet/getTweetId\", props.tweet).then(res => {\n      tweetId = res;\n    });\n    console.log('tweetId in Tweet like: ', tweetId);\n    axios.put(`/api/user/${userId}/tweet/${tweetId}/like`).then(() => {\n      axios.get(`/apiTweet/tweet/${tweetId}/like`).then(res => {\n        setNbLikes(prev => {\n          return [res, !nbLikes[1]];\n        });\n      });\n    });\n  }\n\n  const text = props.tweet['content'];\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: author['profilePicture'] === \"\" ? DEFAULT_PP : author['profilePicture'],\n        alt: \"tweet author's profile picture\",\n        height: \"60\",\n        width: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"tweet-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-pink bold\",\n          children: author['username']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-grey\",\n          children: moment(props.tweet[\"dateCreated\"]).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"tweet-content\",\n        children: [props.tweet['image'] !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"tweet-image\",\n          src: props.tweet['image'],\n          alt: \"Not Found\",\n          width: \"300px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(AutoLink, {\n          text: text,\n          renderText: txt => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"default-font\",\n            children: txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 46\n          }, this),\n          renderLink: (txt, match) => /*#__PURE__*/_jsxDEV(CustomLink, {\n            url: match.getAnchorHref(),\n            msg: txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"tweet-footer\",\n        children: [/*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : handleReplyChange,\n          imageSrc: COMMENT_ICON,\n          name: \"comments\",\n          cpt: nbReplies[0],\n          action: nbReplies[1] && \"commented\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : handleRetweetChange,\n          imageSrc: RETWEET_ICON,\n          name: \"retweet\",\n          cpt: nbRetweets[0],\n          action: nbRetweets[1] && \"retweeted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : handleLikeChange,\n          imageSrc: LIKE_ICON,\n          name: \"like\",\n          cpt: nbLikes[0],\n          action: nbLikes[1] && \"liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          imageSrc: SHARE_ICON,\n          name: \"share\",\n          cpt: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ride-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tweet-del-res\",\n        type: \"button\",\n        value: \"Hide\",\n        onClick: event => props.onDelete(event, handleDelete())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tweet, \"YuEiHn6Q4HDuN6EUik6tBGzdUgM=\");\n\n_c = Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js"],"names":["React","useState","AutoLink","axios","moment","CustomLink","TweetIcon","COMMENT_ICON","RETWEET_ICON","LIKE_ICON","SHARE_ICON","DEFAULT_PP","Tweet","props","nbReplies","setNbReplies","tweet","nbRetweets","setNbRetweets","nbLikes","setNbLikes","deleted","setDeleted","author","setAuthor","get","then","res","data","handleDelete","event","prev","id","handleReplyChange","replied","addReply","removeReply","getNbReplies","handleRetweetChange","retweeted","addRetweet","removeRetweet","getNbRetweets","handleLikeChange","preventDefault","console","log","userId","tweetId","post","put","text","fromNow","txt","match","getAnchorHref","default","undefined","onDelete"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoLink from \"react-native-autolink\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport CustomLink from \"../../atomComponents/CustomLink.js\";\nimport TweetIcon from \"./TweetIcon.js\";\n\n\nimport COMMENT_ICON from \"../../images/icons/tweetIcons/outline_chat_bubble_outline_white_18dp_1x.png\";\nimport RETWEET_ICON from \"../../images/icons/tweetIcons/outline_reply_white_18dp_1x.png\";\nimport LIKE_ICON from \"../../images/icons/tweetIcons/outline_favorite_border_white_18dp_1x.png\";\nimport SHARE_ICON from \"../../images/icons/tweetIcons/outline_file_upload_white_18dp_1x.png\";\n\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\";\n\n\n//a tweet as a prop\nexport default function Tweet(props){\n\n    const [nbReplies, setNbReplies] = useState([props.tweet['nbComments'], false]);\n    const [nbRetweets, setNbRetweets] = useState([props.tweet['nbRetweets'], false]);\n    const [nbLikes, setNbLikes] = useState([props.tweet['nbLikes'],false]);\n\n    const [deleted, setDeleted] = useState(props.deleted);\n\n    const [author, setAuthor] = useState(\n        async () => {\n            await axios\n                .get(`/api/user/${props.tweet['author']}`)\n                .then( (res) => {\n                    //console.log('user: ', res.data);\n                    setAuthor(res.data);\n                });\n        }\n    );\n\n    function handleDelete(event){\n        //console.log(\"handleDelete\");\n        setDeleted (prev => {\n            return !prev;\n        })\n        return props.id;\n    }\n\n    function handleReplyChange(event){\n        setNbReplies( prev => {\n            let replied = nbReplies[1]\n            if(!replied)\n                props.tweet.addReply();\n            else\n                props.tweet.removeReply();\n            return [props.tweet.getNbReplies(), !replied];\n        });\n    }\n\n    function handleRetweetChange(event){\n        setNbRetweets( prev => {\n            let retweeted = nbRetweets[1]\n            if(!retweeted)\n                props.tweet.addRetweet();\n            else\n                props.tweet.removeRetweet();\n            return [props.tweet.getNbRetweets(), !retweeted];\n        });\n    }\n\n    async function handleLikeChange(event){\n        event.preventDefault();\n        console.log('tweet: ', props.tweet);\n        let userId = props.tweet['author'];\n        let tweetId = '';\n        await axios\n            .post(\"/apiTweet/tweet/getTweetId\", props.tweet)\n            .then( (res) => { tweetId=res; })\n        console.log('tweetId in Tweet like: ', tweetId);\n        axios\n            .put(`/api/user/${userId}/tweet/${tweetId}/like`)\n            .then( () => {\n                axios\n                    .get(`/apiTweet/tweet/${tweetId}/like`)\n                    .then( (res) => {\n                        setNbLikes( prev => {\n                            return [res, !nbLikes[1]];\n                    });\n                });\n            });\n    }\n\n    const text = props.tweet['content'];\n\n\n    return(\n        <article className=\"tweet\">\n            <div className=\"left-side-tweet\">\n                <img src={author['profilePicture']===\"\" ? DEFAULT_PP : author['profilePicture']}\n                    alt=\"tweet author's profile picture\"\n                    height=\"60\" width=\"60\"\n                />\n            </div>\n            <div className=\"tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold\">\n                        {author['username']}\n                    </span>\n                    <span className=\"color-light-grey\">\n                        {moment(props.tweet[\"dateCreated\"]).fromNow()}\n                    </span>\n                </header>\n                <main className=\"tweet-content\">\n                    {props.tweet['image']!==\"\" && <img className=\"tweet-image\" src={props.tweet['image']} alt=\"Not Found\" width={\"300px\"} />}\n                    <AutoLink text={text} \n                        renderText={(txt) => <span className=\"default-font\">{txt}</span>}\n                        renderLink={(txt, match) => <CustomLink url={match.getAnchorHref()} msg={txt}/>}\n                    />\n                </main>\n                <footer className=\"tweet-footer\">\n                    <TweetIcon onClick={props.default? undefined : handleReplyChange} imageSrc={COMMENT_ICON} \n                        name=\"comments\" cpt={nbReplies[0]} action={nbReplies[1] && \"commented\"}/>\n                    <TweetIcon onClick={props.default? undefined : handleRetweetChange} imageSrc={RETWEET_ICON} \n                        name=\"retweet\" cpt={nbRetweets[0]} action={nbRetweets[1] && \"retweeted\"}/>\n                    <TweetIcon onClick={props.default? undefined : handleLikeChange} imageSrc={LIKE_ICON} \n                        name=\"like\" cpt={nbLikes[0]} action={nbLikes[1] && \"liked\"}/>\n                    <TweetIcon imageSrc={SHARE_ICON} name=\"share\" cpt={0} />\n                </footer>\n            </div>\n            <div className=\"ride-side-tweet\">\n                <input className=\"tweet-del-res\" type=\"button\" value=\"Hide\" onClick={(event) => props.onDelete(event, handleDelete())} />\n            </div>\n        </article>\n    )\n}"]},"metadata":{},"sourceType":"module"}