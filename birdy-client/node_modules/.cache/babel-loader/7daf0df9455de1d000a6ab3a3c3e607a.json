{"ast":null,"code":"import _slicedToArray from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Tweet from\"./Tweet.js\";import NewTweet from\"./NewTweet.js\";import TweetDeleted from\"./TweetDeleted.js\";import\"../../stylesheets/components/timeline.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MAX_NB_TWEETS=100;//props an array of tweets to render\n//default: boolean\nexport default function Timeline(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tweetList=_useState2[0],setTweetList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tweets=_useState4[0],setTweets=_useState4[1];//console.log('props.tweets: ', props.tweets);\n//console.log('tweetList: ', tweetList);\nuseEffect(function(){var listTmp=props.tweets.map(function(item){return[item,false];//[value, deleted?]\n});function handleHideTweet(event,id){//console.log(\"handleHideTweet\");\nsetTweetList(function(prev){//console.log(\"setTweetList\");\nvar tweetListTmp=prev.map(function(item){if(item[0]['_id']===id){//console.log(\"hidden\");\nreturn[item[0],!item[1]];}else{//console.log(id);\nreturn item;}});setTweets(genTweetsToRender(tweetListTmp));return tweetListTmp;});}function genTweetsToRender(listToMap){//console.log('list to map: ', listToMap);\nvar listResult=listToMap.map(function(item){var tweetId=item[0]['_id'];if(!item[1]){return/*#__PURE__*/_jsx(Tweet,{id:tweetId,tweet:item[0],default:props.default,user:props.user,deleted:false,onDelete:handleHideTweet},tweetId);}else{return/*#__PURE__*/_jsx(TweetDeleted,{id:tweetId,deleted:true,onDelete:handleHideTweet},tweetId);}});//console.log('listResult: ', listResult);\nreturn listResult;}setTweetList(listTmp);setTweets(genTweetsToRender(listTmp));},[props.tweets,props.default,props.user]);function genTweetsToRender(listToMap){//console.log('list to map: ', listToMap);\nvar listResult=listToMap.map(function(item){var tweetId=item[0]['_id'];if(!item[1]){return/*#__PURE__*/_jsx(Tweet,{id:tweetId,tweet:item[0],default:props.default,user:props.user,deleted:false,onDelete:handleHideTweet},tweetId);}else{return/*#__PURE__*/_jsx(TweetDeleted,{id:tweetId,deleted:true,onDelete:handleHideTweet},tweetId);}});//console.log('listResult: ', listResult);\nreturn listResult;}function handleHideTweet(event,id){//console.log(\"handleHideTweet\");\nsetTweetList(function(prev){//console.log(\"setTweetList\");\nvar tweetListTmp=tweetList.map(function(item){if(item[0]['_id']===id){//console.log(\"hidden\");\nreturn[item[0],!item[1]];}else{//console.log(id);\nreturn item;}});setTweets(genTweetsToRender(tweetListTmp));return tweetListTmp;});}function handleRenderNewTweet(event,newTweetId){axios.get(\"/apiTweet/tweet/getNTweets/\".concat(MAX_NB_TWEETS)).then(function(res){//console.log('tweets: ', res.data);\nsetTweetList(function(prev){var tweetListTmp=res.data.map(function(item){return[item,false];});setTweets(genTweetsToRender(tweetListTmp));return tweetListTmp;});});}return/*#__PURE__*/_jsxs(\"div\",{className:\"timeline column\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"timeline-header\",children:/*#__PURE__*/_jsx(\"div\",{onClick:props.scroll,className:\"timeline-home\",children:\"Home\"})}),props.default||/*#__PURE__*/_jsx(NewTweet,{onPost:handleRenderNewTweet,user:props.user}),/*#__PURE__*/_jsx(\"main\",{id:\"timeline-main\",className:\"timeline-main\",children:/*#__PURE__*/_jsx(\"section\",{className:\"timeline-tweets\",children:tweets===[]?\"\":tweets})})]});}","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Timeline.js"],"names":["React","useState","useEffect","axios","Tweet","NewTweet","TweetDeleted","MAX_NB_TWEETS","Timeline","props","tweetList","setTweetList","tweets","setTweets","listTmp","map","item","handleHideTweet","event","id","prev","tweetListTmp","genTweetsToRender","listToMap","listResult","tweetId","default","user","handleRenderNewTweet","newTweetId","get","then","res","data","scroll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\";\n\nimport Tweet from \"./Tweet.js\";\nimport NewTweet from \"./NewTweet.js\";\nimport TweetDeleted from \"./TweetDeleted.js\";\n\nimport \"../../stylesheets/components/timeline.css\";\n\nconst MAX_NB_TWEETS = 100;\n\n//props an array of tweets to render\n//default: boolean\nexport default function Timeline(props){\n    const [tweetList, setTweetList] = useState([]);\n    const [tweets, setTweets] = useState([]);\n\n    //console.log('props.tweets: ', props.tweets);\n    //console.log('tweetList: ', tweetList);\n\n    useEffect( () => {\n        let listTmp = props.tweets.map( item => {\n           return [item, false]; //[value, deleted?]\n        })\n\n        function handleHideTweet(event, id){\n            //console.log(\"handleHideTweet\");\n            setTweetList( prev => {\n                //console.log(\"setTweetList\");\n                const tweetListTmp = ( prev.map(item => {\n                    if(item[0]['_id']===id)\n                    {\n                        //console.log(\"hidden\");\n                        return [item[0], !item[1]];\n                    }\n                    else\n                    {\n                        //console.log(id);\n                        return item;\n                    }\n                }));\n                setTweets(genTweetsToRender(tweetListTmp));\n                return tweetListTmp;\n            });\n        }\n\n        function genTweetsToRender(listToMap){\n            //console.log('list to map: ', listToMap);\n            const listResult = \n                listToMap.map((item) => {\n                    const tweetId = item[0]['_id']; \n                    if (!item[1])\n                    {\n                        return(\n                            <Tweet \n                                key={tweetId}\n                                id={tweetId}\n                                tweet={item[0]}\n                                default={props.default}\n                                user={props.user}\n                                deleted={false}\n                                onDelete={handleHideTweet}\n                            />\n                        );\n                    }\n                    else\n                    {\n                        return(\n                            <TweetDeleted \n                                key={tweetId} \n                                id={tweetId} \n                                deleted={true} \n                                onDelete={handleHideTweet}\n                            />\n                        );\n                    }\n                });\n            //console.log('listResult: ', listResult);\n            return listResult;\n        }\n\n        setTweetList(listTmp);\n        setTweets(genTweetsToRender(listTmp));\n\n    }, [props.tweets, props.default, props.user]);\n\n    function genTweetsToRender(listToMap){\n        //console.log('list to map: ', listToMap);\n        const listResult = \n            listToMap.map((item) => {\n                const tweetId = item[0]['_id']; \n                if (!item[1])\n                {\n                    return(\n                        <Tweet \n                            key={tweetId}\n                            id={tweetId}\n                            tweet={item[0]}\n                            default={props.default}\n                            user={props.user}\n                            deleted={false}\n                            onDelete={handleHideTweet}\n                        />\n                    );\n                }\n                else\n                {\n                    return(\n                        <TweetDeleted \n                            key={tweetId} \n                            id={tweetId} \n                            deleted={true} \n                            onDelete={handleHideTweet}\n                        />\n                    );\n                }\n            });\n        //console.log('listResult: ', listResult);\n        return listResult;\n    }\n\n    function handleHideTweet(event, id){\n        //console.log(\"handleHideTweet\");\n        setTweetList( prev => {\n            //console.log(\"setTweetList\");\n            const tweetListTmp = ( tweetList.map(item => {\n                if(item[0]['_id']===id)\n                {\n                    //console.log(\"hidden\");\n                    return [item[0], !item[1]];\n                }\n                else\n                {\n                    //console.log(id);\n                    return item;\n                }\n            }));\n            setTweets(genTweetsToRender(tweetListTmp));\n            return tweetListTmp;\n        });\n    }\n\n    function handleRenderNewTweet(event, newTweetId){\n        axios\n            .get(`/apiTweet/tweet/getNTweets/${MAX_NB_TWEETS}`)\n            .then( (res) => {\n                //console.log('tweets: ', res.data);\n                setTweetList(prev => {\n                    const tweetListTmp = res.data.map( item => {\n                        return [item, false];\n                    })\n                    setTweets(genTweetsToRender(tweetListTmp));\n                    return tweetListTmp;\n                });\n            });        \n    }\n\n    return (\n        <div className=\"timeline column\">\n            <header className=\"timeline-header\">\n                <div onClick={props.scroll} className=\"timeline-home\">Home</div>\n            </header>\n            {/* if default timeline, no new tweets needed */}\n            {props.default || <NewTweet onPost={handleRenderNewTweet} user={props.user} />}\n            <main id=\"timeline-main\" className=\"timeline-main\">\n                <section className=\"timeline-tweets\">\n                    {tweets===[] ? \"\" : tweets}\n                </section>\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}