{"ast":null,"code":"import _defineProperty from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import\"../../stylesheets/components/tweet.css\";import\"../../stylesheets/components/newTweet.css\";import\"../../stylesheets/form.css\";import DEFAULT_PP from\"../../images/icons/outline_account_circle_white_36dp_2x.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewTweet(props){var initTweetContent={content:\"\",image:\"\",imageDom:\"\",gifDom:\"\"};var _useState=useState(initTweetContent),_useState2=_slicedToArray(_useState,2),tweetContent=_useState2[0],setTweetContent=_useState2[1];var navigate=useNavigate();var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var handlePostTweet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var userId,formData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://console.log(\"handlePostTweet\");\nevent.preventDefault();//console.log(tweetContent);\nif(error){_context2.next=8;break;}//on recupere l'id de l'auteur\nuserId=\"\".concat(props.user['_id']);formData={author:\"\".concat(userId),content:tweetContent['content'],image:tweetContent['image']};//on recupere l'id du tweet\n_context2.next=6;return axios.post(\"/apiTweet/tweet/newTweet\",formData).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var newTweetId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newTweetId=res.data.id;_context.next=3;return props.onPost(event,newTweetId);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}());case 6://await props.user.createTweet(tweetContent.content, tweetContent.image);\n//console.log('newTweetId: ', newTweetId);\nclearNewTweet();navigate(\"/p/\".concat(userId),{state:{alreadyLogged:false,userId:userId},replace:false});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handlePostTweet(_x){return _ref.apply(this,arguments);};}();function resetError(){setError(function(prev){if(tweetContent.content!==\"\"||tweetContent.image!==\"\"){return false;}return true;});}function removeError(){setError(false);}function handleChange(event){setTweetContent(function(prev){//console.log(\"[\",event.target.name,\",\",event.target.value,\"]\");\nreturn _objectSpread(_objectSpread({},prev),{},_defineProperty({},event.target.name,event.target.value));});//console.log(\"onChange: error?\", error);\nresetError();};function onImageChange(event){if(event.target.files&&event.target.files[0]){var img=event.target.files[0];//console.log(img);\n//console.log(URL.createObjectURL(img));\nsetTweetContent(function(prev){return _objectSpread(_objectSpread({},prev),{},{image:URL.createObjectURL(img)});});}//console.log(\"onImage: error?\", error);\nremoveError();}function clearNewTweet(){setTweetContent(function(prev){return initTweetContent;});setError(function(prev){return true;});}return/*#__PURE__*/_jsxs(\"div\",{id:\"new-tweet\",className:\"tweet new-tweet\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-side-tweet\",children:/*#__PURE__*/_jsx(\"img\",{src:props.user['profilePicture']!==\"\"?props.user['profilePicture']:DEFAULT_PP,alt:\"user's profile\",height:\"70\",width:\"70\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-tweet-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"tweet-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"color-light-pink bold huge-font\",children:props.user['username']})}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tweet-content\",children:[tweetContent.image!==\"\"&&/*#__PURE__*/_jsx(\"img\",{className:\"tweet-image\",src:tweetContent.image,width:\"250px\",alt:\"not found\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"new-tweet-text\",placeholder:\"What's happening ?\",required:true,maxLength:\"140\",rows:\"2\",name:\"content\",onChange:handleChange,value:tweetContent.content})]}),/*#__PURE__*/_jsxs(\"footer\",{className:\"tweet-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-tweet-icons\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"small-font new-tweet-button pointer\",htmlFor:\"imageFile\",children:\"Img\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"imageDom\",id:\"imageFile\",className:\"display-none\",accept:\"image/png\",onChange:function onChange(event){handleChange(event);onImageChange(event);},value:tweetContent.imageDom}),/*#__PURE__*/_jsx(\"label\",{className:\"small-font new-tweet-button pointer\",htmlFor:\"gifFile\",children:\"Gif\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"gifDom\",id:\"gifFile\",className:\"display-none\",accept:\"image/gif\",onChange:function onChange(event){handleChange(event);onImageChange(event);},value:tweetContent.gifDom})]}),/*#__PURE__*/_jsx(\"input\",{className:\"small-font new-tweet-button pointer\",onClick:function onClick(event){return handlePostTweet(event);},type:\"button\",value:\"Tweet\"})]})]})]})]});}","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/NewTweet.js"],"names":["React","useState","useNavigate","axios","DEFAULT_PP","NewTweet","props","initTweetContent","content","image","imageDom","gifDom","tweetContent","setTweetContent","navigate","error","setError","handlePostTweet","event","preventDefault","userId","user","formData","author","post","then","res","newTweetId","data","id","onPost","clearNewTweet","state","alreadyLogged","replace","resetError","prev","removeError","handleChange","target","name","value","onImageChange","files","img","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\n\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\";\n\nexport default function NewTweet(props){\n\n    const initTweetContent = {content:\"\", image:\"\", imageDom:\"\", gifDom:\"\"}\n    const [tweetContent, setTweetContent] = useState(initTweetContent);\n    const navigate = useNavigate();\n\n    const [error, setError] = useState(true);\n\n    const handlePostTweet = async (event) => {\n        //console.log(\"handlePostTweet\");\n        event.preventDefault();\n        //console.log(tweetContent);\n        if(!error){\n            //on recupere l'id de l'auteur\n            let userId = `${props.user['_id']}`;\n\n            const formData = {\n                author: `${userId}`,\n                content: tweetContent['content'],\n                image: tweetContent['image']\n            }\n\n            //on recupere l'id du tweet\n            await axios\n                .post(\"/apiTweet/tweet/newTweet\", formData)\n                .then( async (res) => { \n                    let newTweetId = res.data.id; \n                    await props.onPost(event, newTweetId);\n                });\n\n            //await props.user.createTweet(tweetContent.content, tweetContent.image);\n            //console.log('newTweetId: ', newTweetId);\n            clearNewTweet();\n            navigate(`/p/${userId}`, { state: { alreadyLogged: false, userId: userId }, replace: false, });\n        }\n    }\n\n    function resetError(){\n        setError(prev => {\n            if(tweetContent.content!==\"\" || tweetContent.image!==\"\"){\n                return false;\n            }\n            return true;\n        });\n    }\n\n    function removeError(){\n        setError(false);\n    }\n\n    function handleChange(event){\n        setTweetContent( prev => {\n            //console.log(\"[\",event.target.name,\",\",event.target.value,\"]\");\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            };\n        });\n        //console.log(\"onChange: error?\", error);\n        resetError();\n    };\n\n    function onImageChange(event){\n        if(event.target.files && event.target.files[0]){\n            const img = event.target.files[0];\n            //console.log(img);\n            //console.log(URL.createObjectURL(img));\n            setTweetContent( prev => {\n                return {\n                    ...prev,\n                    image: URL.createObjectURL(img)\n                };\n            });\n        }\n        //console.log(\"onImage: error?\", error);\n        removeError();\n    }\n\n    function clearNewTweet(){\n        setTweetContent(prev => {return initTweetContent;});\n        setError(prev => true);\n    }\n\n    return(\n        <div id=\"new-tweet\" className=\"tweet new-tweet\">\n            <div className=\"left-side-tweet\">\n            <img src={props.user['profilePicture']!==\"\" ? props.user['profilePicture'] : DEFAULT_PP}\n                    alt=\"user's profile\"\n                    height=\"70\" width=\"70\"\n                />\n            </div>\n            <div className=\"new-tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold huge-font\">\n                        {props.user['username']}\n                    </span>\n                </header>\n                <form>\n                    <div className=\"tweet-content\">\n                        {tweetContent.image!==\"\" && <img className=\"tweet-image\" src={tweetContent.image} width={\"250px\"} alt=\"not found\"/>}\n                        <textarea className=\"new-tweet-text\" \n                            placeholder=\"What's happening ?\" required \n                            maxLength=\"140\" rows=\"2\"\n                            name=\"content\"\n                            onChange={handleChange}\n                            value={tweetContent.content}\n                        />\n                    </div>\n                    <footer className=\"tweet-footer\">\n                        <div className=\"new-tweet-icons\">\n                            <label className=\"small-font new-tweet-button pointer\" htmlFor=\"imageFile\">Img</label>\n                            <input \n                                type=\"file\" name=\"imageDom\" id=\"imageFile\" \n                                className=\"display-none\" \n                                accept=\"image/png\"\n                                onChange={(event) => {handleChange(event); onImageChange(event);}}\n                                value={tweetContent.imageDom}\n                            />\n                            <label className=\"small-font new-tweet-button pointer\" htmlFor=\"gifFile\">Gif</label>\n                            <input \n                                type=\"file\" name=\"gifDom\" id=\"gifFile\" \n                                className=\"display-none\" \n                                accept=\"image/gif\"\n                                onChange={(event) => {handleChange(event); onImageChange(event);}}\n                                value={tweetContent.gifDom}\n                            />\n                        </div>\n                        <input className=\"small-font new-tweet-button pointer\" onClick={ (event) => handlePostTweet(event) } type=\"button\" value=\"Tweet\"/>\n                    </footer>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}