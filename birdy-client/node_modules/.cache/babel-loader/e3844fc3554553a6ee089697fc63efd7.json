{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AutoLink from \"react-native-autolink\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport CustomLink from \"../../atomComponents/CustomLink.js\";\nimport TweetIcon from \"./TweetIcon.js\";\nimport COMMENT_ICON from \"../../images/icons/tweetIcons/outline_chat_bubble_outline_white_18dp_1x.png\";\nimport RETWEET_ICON from \"../../images/icons/tweetIcons/outline_reply_white_18dp_1x.png\";\nimport LIKE_ICON from \"../../images/icons/tweetIcons/outline_favorite_border_white_18dp_1x.png\";\nimport SHARE_ICON from \"../../images/icons/tweetIcons/outline_file_upload_white_18dp_1x.png\";\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\"; //a tweet as a prop\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tweet(props) {\n  _s();\n\n  const [nbReplies, setNbReplies] = useState([props.tweet['nbComments'], false]);\n  const [nbRetweets, setNbRetweets] = useState([props.tweet['nbRetweets'], false]);\n  const [nbLikes, setNbLikes] = useState([props.tweet['nbLikes'], false]);\n  const [deleted, setDeleted] = useState(props.deleted);\n  const navigate = useNavigate();\n  const [author, setAuthor] = useState(async () => {\n    await axios.get(`/api/user/${props.tweet['author']}`).then(res => {\n      //console.log('user: ', res.data);\n      setAuthor(res.data);\n    });\n  });\n\n  function handleDelete(event) {\n    //console.log(\"handleDelete\");\n    setDeleted(prev => {\n      return !prev;\n    });\n    return props.id;\n  } // function handleReplyChange(event){\n  //     setNbReplies( prev => {\n  //         let replied = nbReplies[1]\n  //         if(!replied)\n  //             props.tweet.addReply();\n  //         else\n  //             props.tweet.removeReply();\n  //         return [props.tweet.getNbReplies(), !replied];\n  //     });\n  // }\n\n\n  async function handleRetweetChange(event) {\n    event.preventDefault(); //console.log('tweet: ', props.tweet);\n\n    let userId = '';\n    let tweetId = props.tweet['_id'];\n    await Promise.all([axios.get(`/api/user/getUserId/${props.user['username']}`).then(res => {\n      userId = res.data;\n    }) // axios\n    //     .post(\"/apiTweet/tweet/getTweetId\", props.tweet)\n    //     .then( (res) => { tweetId = res.data; }),\n    ]); //console.log('tweetId: ', tweetId);\n    //console.log('userId: ', userId);\n    //console.log('retweeted? ', nbRetweets[1]);\n\n    if (!nbRetweets[1]) {\n      axios.put(`/api/user/${userId}/tweet/${tweetId}/retweet`).then(() => {\n        axios.get(`/apiTweet/tweet/${tweetId}`).then(res => {\n          //console.log('res last get: ', res);\n          setNbRetweets(prev => {\n            return [res.data['nbRetweets'], true];\n          });\n        });\n      });\n    } else {\n      axios.put(`/api/user/${userId}/tweet/${tweetId}/unretweet`).then(() => {\n        axios.get(`/apiTweet/tweet/${tweetId}`).then(res => {\n          //console.log('res last get: ', res);\n          setNbRetweets(prev => {\n            return [res.data['nbRetweets'], false];\n          });\n        });\n      });\n    }\n  }\n\n  async function handleLikeChange(event) {\n    event.preventDefault(); //console.log('tweet: ', props.tweet);\n\n    let userId = '';\n    let tweetId = '';\n    await Promise.all([axios.get(`/api/user/getUserId/${props.user['username']}`).then(res => {\n      userId = res.data;\n    }), axios.post(\"/apiTweet/tweet/getTweetId\", props.tweet).then(res => {\n      tweetId = res.data;\n    })]); //console.log('tweetId: ', tweetId);\n    //console.log('userId: ', userId);\n    //console.log('liked? ', nbLikes[1]);\n\n    if (!nbLikes[1]) {\n      axios.put(`/api/user/${userId}/tweet/${tweetId}/like`).then(() => {\n        axios.get(`/apiTweet/tweet/${tweetId}`).then(res => {\n          //console.log('res last get: ', res);\n          setNbLikes(prev => {\n            return [res.data['nbLikes'], true];\n          });\n        });\n      });\n    } else {\n      axios.put(`/api/user/${userId}/tweet/${tweetId}/unlike`).then(() => {\n        axios.get(`/apiTweet/tweet/${tweetId}`).then(res => {\n          //console.log('res last get: ', res);\n          setNbLikes(prev => {\n            return [res.data['nbLikes'], false];\n          });\n        });\n      });\n    }\n  }\n\n  function handleCheckUserPage(event) {\n    event.preventDefault();\n    const userId = props.tweet['author']; //console.log('test handle check user page');\n\n    navigate(`/p/${userId}`);\n  }\n\n  const text = props.tweet['content'];\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: author['profilePicture'] === \"\" ? DEFAULT_PP : author['profilePicture'],\n        alt: \"tweet author's profile picture\",\n        height: \"60\",\n        width: \"60\",\n        onClick: props.default ? undefined : handleCheckUserPage,\n        className: props.default ? undefined : \"pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"tweet-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-pink bold\",\n          children: author['username']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-grey\",\n          children: moment(props.tweet[\"dateCreated\"]).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"tweet-content\",\n        children: [props.tweet['image'] !== \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"tweet-image\",\n          src: props.tweet['image'],\n          alt: \"Not Found\",\n          width: \"300px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(AutoLink, {\n          text: text,\n          renderText: txt => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"default-font\",\n            children: txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 46\n          }, this),\n          renderLink: (txt, match) => /*#__PURE__*/_jsxDEV(CustomLink, {\n            url: match.getAnchorHref(),\n            msg: txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"tweet-footer\",\n        children: [/*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : undefined\n          /*handleReplyChange*/\n          ,\n          imageSrc: COMMENT_ICON,\n          name: \"comments\",\n          cpt: nbReplies[0],\n          action: nbReplies[1] && \"commented\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : handleRetweetChange,\n          imageSrc: RETWEET_ICON,\n          name: \"retweet\",\n          cpt: nbRetweets[0],\n          action: nbRetweets[1] && \"retweeted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          onClick: props.default ? undefined : handleLikeChange,\n          imageSrc: LIKE_ICON,\n          name: \"like\",\n          cpt: nbLikes[0],\n          action: nbLikes[1] && \"liked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TweetIcon, {\n          imageSrc: SHARE_ICON,\n          name: \"share\",\n          cpt: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ride-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tweet-del-res\",\n        type: \"button\",\n        value: \"Hide\",\n        onClick: event => props.onDelete(event, handleDelete())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tweet, \"qAqVgew1qwFKhQQATvZTUQcVCIs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Tweet.js"],"names":["React","useState","AutoLink","useNavigate","axios","moment","CustomLink","TweetIcon","COMMENT_ICON","RETWEET_ICON","LIKE_ICON","SHARE_ICON","DEFAULT_PP","Tweet","props","nbReplies","setNbReplies","tweet","nbRetweets","setNbRetweets","nbLikes","setNbLikes","deleted","setDeleted","navigate","author","setAuthor","get","then","res","data","handleDelete","event","prev","id","handleRetweetChange","preventDefault","userId","tweetId","Promise","all","user","put","handleLikeChange","post","handleCheckUserPage","text","default","undefined","fromNow","txt","match","getAnchorHref","onDelete"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport AutoLink from \"react-native-autolink\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport CustomLink from \"../../atomComponents/CustomLink.js\";\nimport TweetIcon from \"./TweetIcon.js\";\n\n\nimport COMMENT_ICON from \"../../images/icons/tweetIcons/outline_chat_bubble_outline_white_18dp_1x.png\";\nimport RETWEET_ICON from \"../../images/icons/tweetIcons/outline_reply_white_18dp_1x.png\";\nimport LIKE_ICON from \"../../images/icons/tweetIcons/outline_favorite_border_white_18dp_1x.png\";\nimport SHARE_ICON from \"../../images/icons/tweetIcons/outline_file_upload_white_18dp_1x.png\";\n\nimport DEFAULT_PP from \"../../images/icons/outline_account_circle_white_36dp_2x.png\";\n\n\n//a tweet as a prop\nexport default function Tweet(props){\n\n    const [nbReplies, setNbReplies] = useState([props.tweet['nbComments'], false]);\n    const [nbRetweets, setNbRetweets] = useState([props.tweet['nbRetweets'], false]);\n    const [nbLikes, setNbLikes] = useState([props.tweet['nbLikes'],false]);\n\n    const [deleted, setDeleted] = useState(props.deleted);\n    const navigate = useNavigate();\n\n    const [author, setAuthor] = useState(\n        async () => {\n            await axios\n                .get(`/api/user/${props.tweet['author']}`)\n                .then( (res) => {\n                    //console.log('user: ', res.data);\n                    setAuthor(res.data);\n                });\n        }\n    );\n\n    function handleDelete(event){\n        //console.log(\"handleDelete\");\n        setDeleted (prev => {\n            return !prev;\n        })\n        return props.id;\n    }\n\n    // function handleReplyChange(event){\n    //     setNbReplies( prev => {\n    //         let replied = nbReplies[1]\n    //         if(!replied)\n    //             props.tweet.addReply();\n    //         else\n    //             props.tweet.removeReply();\n    //         return [props.tweet.getNbReplies(), !replied];\n    //     });\n    // }\n\n    async function handleRetweetChange(event){\n        event.preventDefault();\n        //console.log('tweet: ', props.tweet);\n        let userId = '';\n        let tweetId = props.tweet['_id'];\n        await Promise.all([\n            axios\n                .get(`/api/user/getUserId/${props.user['username']}`)\n                .then( (res) => { userId = res.data; }),\n\n            // axios\n            //     .post(\"/apiTweet/tweet/getTweetId\", props.tweet)\n            //     .then( (res) => { tweetId = res.data; }),\n        ]);\n        //console.log('tweetId: ', tweetId);\n        //console.log('userId: ', userId);\n        //console.log('retweeted? ', nbRetweets[1]);\n        if(!nbRetweets[1]){\n            axios\n                .put(`/api/user/${userId}/tweet/${tweetId}/retweet`)\n                .then( () => {\n                    axios\n                        .get(`/apiTweet/tweet/${tweetId}`)\n                        .then( (res) => {\n                            //console.log('res last get: ', res);\n                            setNbRetweets( prev => {\n                                return [res.data['nbRetweets'], true];\n                        });\n                    });\n                });\n        } else {\n            axios\n                .put(`/api/user/${userId}/tweet/${tweetId}/unretweet`)\n                .then( () => {\n                    axios\n                        .get(`/apiTweet/tweet/${tweetId}`)\n                        .then( (res) => {\n                            //console.log('res last get: ', res);\n                            setNbRetweets( prev => {\n                                return [res.data['nbRetweets'], false];\n                        });\n                    });\n                });\n        }\n    }\n\n    async function handleLikeChange(event){\n        event.preventDefault();\n        //console.log('tweet: ', props.tweet);\n        let userId = '';\n        let tweetId = '';\n        await Promise.all([\n            axios\n                .get(`/api/user/getUserId/${props.user['username']}`)\n                .then( (res) => { userId = res.data; }),\n\n            axios\n                .post(\"/apiTweet/tweet/getTweetId\", props.tweet)\n                .then( (res) => { tweetId = res.data; }),\n        ]);\n        //console.log('tweetId: ', tweetId);\n        //console.log('userId: ', userId);\n        //console.log('liked? ', nbLikes[1]);\n        if(!nbLikes[1]){\n            axios\n                .put(`/api/user/${userId}/tweet/${tweetId}/like`)\n                .then( () => {\n                    axios\n                        .get(`/apiTweet/tweet/${tweetId}`)\n                        .then( (res) => {\n                            //console.log('res last get: ', res);\n                            setNbLikes( prev => {\n                                return [res.data['nbLikes'], true];\n                        });\n                    });\n                });\n        } else {\n            axios\n                .put(`/api/user/${userId}/tweet/${tweetId}/unlike`)\n                .then( () => {\n                    axios\n                        .get(`/apiTweet/tweet/${tweetId}`)\n                        .then( (res) => {\n                            //console.log('res last get: ', res);\n                            setNbLikes( prev => {\n                                return [res.data['nbLikes'], false];\n                        });\n                    });\n                });\n        }\n    }\n\n    function handleCheckUserPage(event){\n        event.preventDefault();\n        const userId = props.tweet['author'];\n        //console.log('test handle check user page');\n        navigate(`/p/${userId}`);\n    }\n\n    const text = props.tweet['content'];\n\n\n    return(\n        <article className=\"tweet\">\n            <div className=\"left-side-tweet\">\n                <img src={author['profilePicture']===\"\" ? DEFAULT_PP : author['profilePicture']}\n                    alt=\"tweet author's profile picture\"\n                    height=\"60\" width=\"60\"\n                    onClick={props.default? undefined : handleCheckUserPage}\n                    className={props.default? undefined : \"pointer\"}\n                />\n            </div>\n            <div className=\"tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold\">\n                        {author['username']}\n                    </span>\n                    <span className=\"color-light-grey\">\n                        {moment(props.tweet[\"dateCreated\"]).fromNow()}\n                    </span>\n                </header>\n                <main className=\"tweet-content\">\n                    {props.tweet['image']!==\"\" && <img className=\"tweet-image\" src={props.tweet['image']} alt=\"Not Found\" width={\"300px\"} />}\n                    <AutoLink text={text} \n                        renderText={(txt) => <span className=\"default-font\">{txt}</span>}\n                        renderLink={(txt, match) => <CustomLink url={match.getAnchorHref()} msg={txt}/>}\n                    />\n                </main>\n                <footer className=\"tweet-footer\">\n                    <TweetIcon onClick={props.default? undefined : undefined/*handleReplyChange*/} imageSrc={COMMENT_ICON} \n                        name=\"comments\" cpt={nbReplies[0]} action={nbReplies[1] && \"commented\"}/>\n                    <TweetIcon onClick={props.default? undefined : handleRetweetChange} imageSrc={RETWEET_ICON} \n                        name=\"retweet\" cpt={nbRetweets[0]} action={nbRetweets[1] && \"retweeted\"}/>\n                    <TweetIcon onClick={props.default? undefined : handleLikeChange} imageSrc={LIKE_ICON} \n                        name=\"like\" cpt={nbLikes[0]} action={nbLikes[1] && \"liked\"}/>\n                    <TweetIcon imageSrc={SHARE_ICON} name=\"share\" cpt={0} />\n                </footer>\n            </div>\n            <div className=\"ride-side-tweet\">\n                <input className=\"tweet-del-res\" type=\"button\" value=\"Hide\" onClick={(event) => props.onDelete(event, handleDelete())} />\n            </div>\n        </article>\n    )\n}"]},"metadata":{},"sourceType":"module"}