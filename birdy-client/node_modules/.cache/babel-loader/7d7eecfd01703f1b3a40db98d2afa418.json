{"ast":null,"code":"/**\n * Date: 2015-10-05\n * Author: Kasper SÃ¸fren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed at a section within\n * the URL making it still somewhat human readable.\n *\n * @param {String} url\t\t\t\t\t\t A URL.\n * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"...\".\n * @return {String} The truncated URL.\n */\nexport function truncateSmart(url, truncateLen, ellipsisChars) {\n  var ellipsisLengthBeforeParsing;\n  var ellipsisLength;\n\n  if (ellipsisChars == null) {\n    ellipsisChars = '&hellip;';\n    ellipsisLength = 3;\n    ellipsisLengthBeforeParsing = 8;\n  } else {\n    ellipsisLength = ellipsisChars.length;\n    ellipsisLengthBeforeParsing = ellipsisChars.length;\n  }\n\n  var parse_url = function (url) {\n    var urlObj = {};\n    var urlSub = url;\n    var match = urlSub.match(/^([a-z]+):\\/\\//i);\n\n    if (match) {\n      urlObj.scheme = match[1];\n      urlSub = urlSub.substr(match[0].length);\n    }\n\n    match = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n\n    if (match) {\n      urlObj.host = match[1];\n      urlSub = urlSub.substr(match[0].length);\n    }\n\n    match = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n\n    if (match) {\n      urlObj.path = match[1];\n      urlSub = urlSub.substr(match[0].length);\n    }\n\n    match = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n\n    if (match) {\n      urlObj.query = match[1];\n      urlSub = urlSub.substr(match[0].length);\n    }\n\n    match = urlSub.match(/^#(.*?)$/i);\n\n    if (match) {\n      urlObj.fragment = match[1]; //urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n    }\n\n    return urlObj;\n  };\n\n  var buildUrl = function (urlObj) {\n    var url = \"\";\n\n    if (urlObj.scheme && urlObj.host) {\n      url += urlObj.scheme + \"://\";\n    }\n\n    if (urlObj.host) {\n      url += urlObj.host;\n    }\n\n    if (urlObj.path) {\n      url += \"/\" + urlObj.path;\n    }\n\n    if (urlObj.query) {\n      url += \"?\" + urlObj.query;\n    }\n\n    if (urlObj.fragment) {\n      url += \"#\" + urlObj.fragment;\n    }\n\n    return url;\n  };\n\n  var buildSegment = function (segment, remainingAvailableLength) {\n    var remainingAvailableLengthHalf = remainingAvailableLength / 2,\n        startOffset = Math.ceil(remainingAvailableLengthHalf),\n        endOffset = -1 * Math.floor(remainingAvailableLengthHalf),\n        end = \"\";\n\n    if (endOffset < 0) {\n      end = segment.substr(endOffset);\n    }\n\n    return segment.substr(0, startOffset) + ellipsisChars + end;\n  };\n\n  if (url.length <= truncateLen) {\n    return url;\n  }\n\n  var availableLength = truncateLen - ellipsisLength;\n  var urlObj = parse_url(url); // Clean up the URL\n\n  if (urlObj.query) {\n    var matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n\n    if (matchQuery) {\n      // Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n      urlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n      url = buildUrl(urlObj);\n    }\n  }\n\n  if (url.length <= truncateLen) {\n    return url;\n  }\n\n  if (urlObj.host) {\n    urlObj.host = urlObj.host.replace(/^www\\./, \"\");\n    url = buildUrl(urlObj);\n  }\n\n  if (url.length <= truncateLen) {\n    return url;\n  } // Process and build the URL\n\n\n  var str = \"\";\n\n  if (urlObj.host) {\n    str += urlObj.host;\n  }\n\n  if (str.length >= availableLength) {\n    if (urlObj.host.length == truncateLen) {\n      return (urlObj.host.substr(0, truncateLen - ellipsisLength) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    }\n\n    return buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);\n  }\n\n  var pathAndQuery = \"\";\n\n  if (urlObj.path) {\n    pathAndQuery += \"/\" + urlObj.path;\n  }\n\n  if (urlObj.query) {\n    pathAndQuery += \"?\" + urlObj.query;\n  }\n\n  if (pathAndQuery) {\n    if ((str + pathAndQuery).length >= availableLength) {\n      if ((str + pathAndQuery).length == truncateLen) {\n        return (str + pathAndQuery).substr(0, truncateLen);\n      }\n\n      var remainingAvailableLength = availableLength - str.length;\n      return (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    } else {\n      str += pathAndQuery;\n    }\n  }\n\n  if (urlObj.fragment) {\n    var fragment = \"#\" + urlObj.fragment;\n\n    if ((str + fragment).length >= availableLength) {\n      if ((str + fragment).length == truncateLen) {\n        return (str + fragment).substr(0, truncateLen);\n      }\n\n      var remainingAvailableLength2 = availableLength - str.length;\n      return (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    } else {\n      str += fragment;\n    }\n  }\n\n  if (urlObj.scheme && urlObj.host) {\n    var scheme = urlObj.scheme + \"://\";\n\n    if ((str + scheme).length < availableLength) {\n      return (scheme + str).substr(0, truncateLen);\n    }\n  }\n\n  if (str.length <= truncateLen) {\n    return str;\n  }\n\n  var end = \"\";\n\n  if (availableLength > 0) {\n    end = str.substr(-1 * Math.floor(availableLength / 2));\n  }\n\n  return (str.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n}","map":{"version":3,"mappings":"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","names":["truncateSmart","url","truncateLen","ellipsisChars","ellipsisLengthBeforeParsing","ellipsisLength","length","parse_url","urlObj","urlSub","match","scheme","substr","host","path","query","fragment","buildUrl","buildSegment","segment","remainingAvailableLength","remainingAvailableLengthHalf","startOffset","Math","ceil","endOffset","floor","end","availableLength","matchQuery","replace","str","pathAndQuery","remainingAvailableLength2"],"sources":["/home/yannis/Documents/Project/ProjectWeb/birdy/node_modules/autolinker/dist/es2015/src/truncate/truncate-smart.ts"],"sourcesContent":["/**\n * Date: 2015-10-05\n * Author: Kasper SÃ¸fren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed at a section within\n * the URL making it still somewhat human readable.\n *\n * @param {String} url\t\t\t\t\t\t A URL.\n * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"...\".\n * @return {String} The truncated URL.\n */\nexport function truncateSmart( url: string, truncateLen: number, ellipsisChars?: string ) {\n\n\tlet ellipsisLengthBeforeParsing: number;\n\tlet ellipsisLength: number;\n\n\tif(ellipsisChars == null) {\n\t\tellipsisChars = '&hellip;';\n\t\tellipsisLength = 3;\n\t\tellipsisLengthBeforeParsing = 8;\n\t} else {\n\t\tellipsisLength = ellipsisChars.length;\n\t\tellipsisLengthBeforeParsing = ellipsisChars.length;\n\t}\n\n\tlet parse_url = function(url: string) { // Functionality inspired by PHP function of same name\n\t\tlet urlObj: UrlObject = {};\n\t\tlet urlSub = url;\n\t\tlet match = urlSub.match(/^([a-z]+):\\/\\//i);\n\t\tif (match) {\n\t\t\turlObj.scheme = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n\t\tif (match) {\n\t\t\turlObj.host = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.path = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.query = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^#(.*?)$/i);\n\t\tif (match) {\n\t\t\turlObj.fragment = match[1];\n\t\t\t//urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n\t\t}\n\t\treturn urlObj;\n\t};\n\n\tlet buildUrl = function(urlObj: UrlObject){\n\t\tlet url = \"\";\n\t\tif (urlObj.scheme && urlObj.host) {\n\t\t\turl += urlObj.scheme + \"://\";\n\t\t}\n\t\tif (urlObj.host) {\n\t\t\turl += urlObj.host;\n\t\t}\n\t\tif (urlObj.path) {\n\t\t\turl += \"/\" + urlObj.path;\n\t\t}\n\t\tif (urlObj.query) {\n\t\t\turl += \"?\" + urlObj.query;\n\t\t}\n\t\tif (urlObj.fragment) {\n\t\t\turl += \"#\" + urlObj.fragment;\n\t\t}\n\t\treturn url;\n\t};\n\n\tlet buildSegment = function(segment: string, remainingAvailableLength: number){\n\t\tlet remainingAvailableLengthHalf = remainingAvailableLength/ 2,\n\t\t\t\tstartOffset = Math.ceil(remainingAvailableLengthHalf),\n\t\t\t\tendOffset = (-1)*Math.floor(remainingAvailableLengthHalf),\n\t\t\t\tend = \"\";\n\t\tif (endOffset < 0) {\n\t\t\tend = segment.substr(endOffset);\n\t\t}\n\t\treturn segment.substr(0, startOffset) + ellipsisChars + end;\n\t};\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tlet availableLength = truncateLen - ellipsisLength;\n\tlet urlObj = parse_url(url);\n\t// Clean up the URL\n\tif (urlObj.query) {\n\t\tlet matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n\t\tif (matchQuery) {\n\t\t\t// Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n\t\t\turlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n\t\t\turl = buildUrl(urlObj);\n\t\t}\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tif (urlObj.host) {\n\t\turlObj.host = urlObj.host.replace(/^www\\./, \"\");\n\t\turl = buildUrl(urlObj);\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\t// Process and build the URL\n\tlet str = \"\";\n\tif (urlObj.host) {\n\t\tstr += urlObj.host;\n\t}\n\tif (str.length >= availableLength) {\n\t\tif ((urlObj.host as string).length == truncateLen) {\n\t\t\treturn ((urlObj.host as string).substr(0, (truncateLen - ellipsisLength)) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);\n\t\t}\n\t\treturn buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);\n\t}\n\tlet pathAndQuery = \"\";\n\tif (urlObj.path) {\n\t\tpathAndQuery += \"/\" + urlObj.path;\n\t}\n\tif (urlObj.query) {\n\t\tpathAndQuery += \"?\" + urlObj.query;\n\t}\n\tif (pathAndQuery) {\n\t\tif ((str+pathAndQuery).length >= availableLength) {\n\t\t\tif ((str+pathAndQuery).length == truncateLen) {\n\t\t\t\treturn (str + pathAndQuery).substr(0, truncateLen);\n\t\t\t}\n\t\t\tlet remainingAvailableLength = availableLength - str.length;\n\t\t\treturn (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n\t\t} else {\n\t\t\tstr += pathAndQuery;\n\t\t}\n\t}\n\tif (urlObj.fragment) {\n\t\tlet fragment = \"#\"+urlObj.fragment;\n\t\tif ((str+fragment).length >= availableLength) {\n\t\t\tif ((str+fragment).length == truncateLen) {\n\t\t\t\treturn (str + fragment).substr(0, truncateLen);\n\t\t\t}\n\t\t\tlet remainingAvailableLength2 = availableLength - str.length;\n\t\t\treturn (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n\t\t} else {\n\t\t\tstr += fragment;\n\t\t}\n\t}\n\tif (urlObj.scheme && urlObj.host) {\n\t\tlet scheme = urlObj.scheme + \"://\";\n\t\tif ((str+scheme).length < availableLength) {\n\t\t\treturn (scheme + str).substr(0, truncateLen);\n\t\t}\n\t}\n\tif (str.length <= truncateLen) {\n\t\treturn str;\n\t}\n\tlet end = \"\";\n\tif (availableLength > 0) {\n\t\tend = str.substr((-1)*Math.floor(availableLength/2));\n\t}\n\treturn (str.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n}\n\n\ninterface UrlObject {\n\tscheme?: string;\n\thost?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string\n}"]},"metadata":{},"sourceType":"module"}