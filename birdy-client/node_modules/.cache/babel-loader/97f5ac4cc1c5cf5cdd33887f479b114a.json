{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Timeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"./Tweet.js\";\nimport NewTweet from \"./NewTweet.js\";\nimport TweetDeleted from \"./TweetDeleted.js\";\nimport \"../../stylesheets/components/timeline.css\"; //props an array of tweets to render\n//default: boolean\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timeline(props) {\n  _s();\n\n  const [tweetList, setTweetList] = useState(props.tweets.map(item => {\n    return [item, false]; //[value, deleted?]\n  }));\n\n  function genTweetsToRender() {\n    //console.log(tweetList);\n    return tweetList.map(item => {\n      if (!item[1]) {\n        return /*#__PURE__*/_jsxDEV(Tweet, {\n          id: item[0]['index'],\n          tweet: item[0],\n          default: props.default,\n          deleted: false,\n          onDelete: handleDeleteTweet\n        }, item[0]['index'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TweetDeleted, {\n          id: item[0]['index'],\n          deleted: true,\n          onDelete: handleDeleteTweet\n        }, item[0]['index'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  }\n\n  const tweets = genTweetsToRender();\n\n  function handleDeleteTweet(event, id) {\n    //console.log(\"handleDeleteTweet\");\n    setTweetList(prev => {\n      //console.log(\"setTweetList\");\n      return prev.map(item => {\n        if (item[0].getId() === id) {\n          //console.log(\"deleted\");\n          return [item[0], !item[1]];\n        } else {\n          //console.log(id);\n          return item;\n        }\n      });\n    });\n  }\n\n  function handleRenderNewTweet(event) {\n    //console.log(\"handleRenderNewTweet\");\n    setTweetList(prev => {\n      //console.log(\"setter\");\n      prev.unshift([props.tweets[0], false]);\n      return [...prev];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline column\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"timeline-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: props.scroll,\n        className: \"timeline-home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), props.default || /*#__PURE__*/_jsxDEV(NewTweet, {\n      onPost: handleRenderNewTweet,\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"timeline-main\",\n      className: \"timeline-main\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timeline-tweets\",\n        children: tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timeline, \"vLbMzjaY7MMqdVs+H/FrpFiw60Q=\");\n\n_c = Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/Timeline/Timeline.js"],"names":["React","useState","axios","Tweet","NewTweet","TweetDeleted","Timeline","props","tweetList","setTweetList","tweets","map","item","genTweetsToRender","default","handleDeleteTweet","event","id","prev","getId","handleRenderNewTweet","unshift","scroll","user"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport axios from \"axios\";\n\nimport Tweet from \"./Tweet.js\";\nimport NewTweet from \"./NewTweet.js\";\nimport TweetDeleted from \"./TweetDeleted.js\";\n\nimport \"../../stylesheets/components/timeline.css\";\n\n//props an array of tweets to render\n//default: boolean\nexport default function Timeline(props){\n    \n    const [tweetList, setTweetList] = useState(props.tweets.map( item => {\n                                        return [item, false]; //[value, deleted?]\n                                    }));\n\n    function genTweetsToRender(){\n        //console.log(tweetList);\n        return (\n            tweetList.map(item => {\n                if (!item[1])\n                {\n                    return(\n                        <Tweet \n                            key={item[0]['index']}\n                            id={item[0]['index']}\n                            tweet={item[0]}\n                            default={props.default}\n                            deleted={false}\n                            onDelete={handleDeleteTweet}\n                        />\n                    );\n                }\n                else\n                {\n                    return(\n                        <TweetDeleted \n                            key={item[0]['index']} \n                            id={item[0]['index']} \n                            deleted={true} \n                            onDelete={handleDeleteTweet}\n                        />\n                    );\n                }\n            })\n        )\n    }\n\n    const tweets = genTweetsToRender();\n\n    function handleDeleteTweet(event, id){\n        //console.log(\"handleDeleteTweet\");\n        setTweetList( prev => {\n            //console.log(\"setTweetList\");\n            return( prev.map(item => {\n                if(item[0].getId()===id)\n                {\n                    //console.log(\"deleted\");\n                    return [item[0], !item[1]];\n                }\n                else\n                {\n                    //console.log(id);\n                    return item;\n                }\n            }));\n        });\n    }\n\n    function handleRenderNewTweet(event){\n        //console.log(\"handleRenderNewTweet\");\n        setTweetList( prev => {\n            //console.log(\"setter\");\n            prev.unshift([props.tweets[0], false]);\n            return([...prev]);\n        });\n    }\n\n    return (\n        <div className=\"timeline column\">\n            <header className=\"timeline-header\">\n                <div onClick={props.scroll} className=\"timeline-home\">Home</div>\n            </header>\n            {/* if default timeline, no new tweets needed */}\n            {props.default || <NewTweet onPost={handleRenderNewTweet} user={props.user} />}\n            <main id=\"timeline-main\" className=\"timeline-main\">\n                <section className=\"timeline-tweets\">\n                    {tweets}\n                </section>\n            </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}