{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as ROUTES from \"../constants/routes.js\"; // import * as ERROR_MSG from \"../constants/errorMessages.js\";\n\nimport BirdyLogo from \"../atomComponents/Birdy-logo.js\";\nimport \"../stylesheets/form.css\"; // import { checkLogin } from \"../database/users.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    emailAddress: \"\",\n    passwd: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const isInvalid = formData.passwd === \"\" || formData.emailAddress === \"\";\n  useEffect(() => {\n    document.title = \"Login - Birdy\";\n  }, []);\n\n  function handleChange(event) {\n    setFormData(prev => {\n      return { ...prev,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n\n  ;\n\n  const answer_login = res => {\n    console.log('res.data: ', res.data);\n\n    if (res.data['status'] !== 200) {\n      setError(res.data['message']);\n      console.log('error: ', error);\n    } else {\n      const _id = res.data['id'];\n      console.log('user_id: ', _id);\n      navigate(`/p/${_id}`);\n    }\n  };\n\n  const answer_login_err = err => {\n    if (err.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log('err.response.data: ', err.response.data);\n      console.log('err.response.status: ', err.response.status);\n      console.log('err.response.headers: ', err.response.headers);\n      setError(err.response.data['message']);\n\n      if (err.response.status === 403) {\n        setFormData(prev => {\n          return { ...prev,\n            password: \"\"\n          };\n        });\n      }\n    } else if (err.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(err.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', err.message);\n    }\n\n    console.log(err.config);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    axios.post(\"/api/user/login\", formData).then(res => {\n      console.log('then');\n      answer_login(res);\n    }).catch(err => {\n      console.log('catch');\n      answer_login_err(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"form-page-main column gap20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container column gap20\",\n      children: [/*#__PURE__*/_jsxDEV(BirdyLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"base-form column\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          placeholder: \"Email address\",\n          \"aria-label\": \"Enter your email address\",\n          onChange: handleChange,\n          name: \"emailAddress\",\n          value: formData.emailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          \"aria-label\": \"Enter your password\",\n          onChange: handleChange,\n          name: \"passwd\",\n          value: formData.passwd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `form-submit ${isInvalid && \"submit-invalid\" || \"submit\"}`,\n          type: \"submit\",\n          value: \"Log In\",\n          disabled: isInvalid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message form-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-form-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\\u2002\", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-route\",\n          to: ROUTES.SIGN_UP,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"D9JUce1Eol+4DGeMqDVcaUsRgD8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Login.js"],"names":["React","useState","useEffect","Link","useNavigate","axios","ROUTES","BirdyLogo","Login","navigate","formData","setFormData","emailAddress","passwd","error","setError","isInvalid","document","title","handleChange","event","prev","target","name","value","answer_login","res","console","log","data","_id","answer_login_err","err","response","status","headers","password","request","message","config","handleLogin","preventDefault","post","then","catch","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport * as ROUTES from \"../constants/routes.js\";\n// import * as ERROR_MSG from \"../constants/errorMessages.js\";\n\nimport BirdyLogo from \"../atomComponents/Birdy-logo.js\";\nimport \"../stylesheets/form.css\";\n\n// import { checkLogin } from \"../database/users.js\";\n\nexport default function Login(){\n\n    const navigate = useNavigate();\n\n    const [formData, setFormData] = useState(\n        {emailAddress:\"\", passwd:\"\"}\n    );\n\n    const [error, setError] = useState(\"\");\n\n    const isInvalid = formData.passwd === \"\" || formData.emailAddress === \"\";\n\n    useEffect( () => {\n        document.title = \"Login - Birdy\";\n    }, []);\n\n    function handleChange(event){\n        setFormData( prev => {\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            }\n        })\n    };\n\n    const answer_login = (res) => {\n        console.log('res.data: ', res.data);\n        if(res.data['status'] !== 200){\n            setError(res.data['message']);\n            console.log('error: ', error);\n        }else{\n            const _id = res.data['id'];\n            console.log('user_id: ', _id);\n            navigate(`/p/${_id}`);\n        }\n    }\n\n    const answer_login_err = (err) => {\n        if (err.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log('err.response.data: ',    err.response.data);\n            console.log('err.response.status: ',  err.response.status);\n            console.log('err.response.headers: ', err.response.headers);\n            setError(err.response.data['message']);\n            if(err.response.status === 403){\n                setFormData( prev => {return {...prev, password:\"\"}});\n            }\n        } else if (err.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(err.request);\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', err.message);\n        }\n        \n        console.log(err.config);\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        axios\n            .post(\"/api/user/login\", formData)\n            .then( (res) => {\n                console.log('then');\n                answer_login(res);\n            })\n            .catch( (err) => {\n                console.log('catch');\n                answer_login_err(err);\n            });\n    }\n\n    return(\n        <main className=\"form-page-main column gap20\">\n            <div className=\"form-container column gap20\">\n                <BirdyLogo />\n                <form className=\"base-form column\" onSubmit={handleLogin}>\n                    <input\n                        className=\"form-input\" \n                        type=\"email\" \n                        placeholder=\"Email address\" \n                        aria-label=\"Enter your email address\"\n                        onChange={handleChange}\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                    />\n                    <input\n                        className=\"form-input\" \n                        type=\"password\" \n                        placeholder=\"Password\" \n                        aria-label=\"Enter your password\"\n                        onChange={handleChange}\n                        name=\"passwd\"\n                        value={formData.passwd}                        \n                    />\n                    <input \n                        className={`form-submit ${isInvalid && \"submit-invalid\" || \"submit\"}`}\n                        type=\"submit\" \n                        value=\"Log In\"\n                        disabled={isInvalid}\n                    />\n                </form>\n                {error && <p className=\"error-message form-error\">{error}</p>}\n            </div>\n            <div className=\"base-form-footer\">\n                <p>\n                    Don't have an account?&ensp;\n                    <Link className=\"link-route\" to={ROUTES.SIGN_UP}>\n                        Sign up\n                    </Link>\n                </p>\n            </div>\n        </main>\n    )\n};"]},"metadata":{},"sourceType":"module"}