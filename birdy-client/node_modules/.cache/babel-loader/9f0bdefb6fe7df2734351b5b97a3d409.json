{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes.js\";\nimport SearchBar from \"./SearchBar.js\";\nimport \"../../stylesheets/components/sideBar.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SideBar(props) {\n  _s();\n\n  const [follows, setFollows] = useState([]);\n  const [followed, setFollowed] = useState(false);\n  const [userCurPage, setUserCurPage] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function initFollows() {\n      if (props.logged) {\n        setUserCurPage(props.user);\n        await axios.get(`/api/user/${props.user}/follows`).then(res => {\n          console.log('res.data: ', res.data);\n          setFollows(res.data);\n        });\n      } else {\n        setFollows([]);\n      }\n    }\n\n    initFollows();\n  }, [props.logged, props.user]);\n\n  const listFollows = () => {\n    const listUsernameFollows = follows.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"follow-list-username\",\n          onClick: handleCheckUserPage,\n          children: user['username']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, user['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follow-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"follow-list-title\",\n        children: 'Follows list'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"follow-list-elem\",\n        children: listUsernameFollows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleClickFollowButton = () => {\n    //console.log('userCurPage: ', { followId: userCurPage });\n    axios.post(`/api/user/${props.connectedUser}/follows`, {\n      followId: userCurPage\n    }).then(() => {\n      setFollowed(prev => {\n        return !prev;\n      });\n    });\n  };\n\n  async function handleCheckUserPage(event) {\n    event.preventDefault(); //console.log('tweet: ', props.tweet);\n\n    let userId = '';\n    await axios.get(`/api/user/getUserId/${props.user['username']}`).then(res => {\n      userId = res.data;\n    });\n    const author = props.tweet['author']; //console.log('test handle check user page');\n\n    if (author !== userId) {\n      navigate(`/p/${userId}`, {\n        state: {\n          alreadyLogged: true,\n          userId: author\n        },\n        replace: false\n      });\n    }\n  }\n\n  const followButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"follow-button-handler\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"follow-button\",\n        onClick: handleClickFollowButton,\n        children: followed ? \"Unfollow\" : \"Follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-bar-connections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-handler\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-route link-no-style link-blue\",\n          to: props.logged ? ROUTES.DASHBOARD : ROUTES.LOGIN,\n          children: props.logged ? \"Log Out\" : \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link-handler\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link-route link-no-style link-blue\",\n          to: ROUTES.SIGN_UP,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), props.connectedUser ? followButton() : '', props.logged ? listFollows() : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SideBar, \"B7/DUvrWi5J/M4u/ttYArRrs+i4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/components/SideBar/SideBar.js"],"names":["React","useState","useEffect","Link","useNavigate","ROUTES","SearchBar","axios","SideBar","props","follows","setFollows","followed","setFollowed","userCurPage","setUserCurPage","navigate","initFollows","logged","user","get","then","res","console","log","data","listFollows","listUsernameFollows","map","handleCheckUserPage","handleClickFollowButton","post","connectedUser","followId","prev","event","preventDefault","userId","author","tweet","state","alreadyLogged","replace","followButton","DASHBOARD","LOGIN","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes.js\";\n\nimport SearchBar from \"./SearchBar.js\";\n\nimport \"../../stylesheets/components/sideBar.css\"\nimport axios from \"axios\";\n\nexport default function SideBar(props){\n    const [follows, setFollows ] = useState([]);\n    const [followed, setFollowed] = useState(false);\n    const [userCurPage, setUserCurPage] = useState();\n    const navigate = useNavigate();\n\n    useEffect( () => {\n            async function initFollows() {\n                if(props.logged){\n                    setUserCurPage(props.user)\n                    await axios\n                        .get(`/api/user/${props.user}/follows`)\n                        .then( (res) => {\n                            console.log('res.data: ', res.data);\n                            setFollows(res.data);\n                        })\n                } else {\n                    setFollows([]);\n                }\n            }\n\n            initFollows();\n\n        },[props.logged, props.user]\n    );\n\n    const listFollows = () => {\n        const listUsernameFollows = follows.map( (user) => {\n            return (\n                <li key={user['_id']}>\n                    <h4 className=\"follow-list-username\" onClick={handleCheckUserPage}>\n                        {user['username']}\n                    </h4>\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"follow-list\">\n                <h2 className=\"follow-list-title\">{'Follows list'}</h2>\n                <ul className=\"follow-list-elem\">{listUsernameFollows}</ul>\n            </div>\n        )        \n    }\n\n    const handleClickFollowButton = () => {\n        //console.log('userCurPage: ', { followId: userCurPage });\n        axios\n            .post(`/api/user/${props.connectedUser}/follows`, { followId: userCurPage })\n            .then( () => {\n                setFollowed(prev => {return !prev});\n            })\n    }\n\n    async function handleCheckUserPage(event){\n        event.preventDefault();\n        //console.log('tweet: ', props.tweet);\n        let userId = '';\n        await axios\n                .get(`/api/user/getUserId/${props.user['username']}`)\n                .then( (res) => { userId = res.data; });\n\n        const author = props.tweet['author'];\n        //console.log('test handle check user page');\n        if(author!==userId){\n            navigate(`/p/${userId}`, { state: { alreadyLogged: true, userId: author }, replace: false, });\n        }\n    }\n\n    const followButton = () => {\n        return (\n            <div className=\"follow-button-handler\">\n                <div className=\"follow-button\" onClick={handleClickFollowButton}>\n                    {followed ? \"Unfollow\" : \"Follow\"}\n                </div>\n            </div>\n        );\n    }\n\n    return(\n        <section className=\"side-bar\">\n            <SearchBar />\n            <div className=\"side-bar-connections\">\n                <div className=\"link-handler\">\n                    <Link className=\"link-route link-no-style link-blue\" to={props.logged ? ROUTES.DASHBOARD : ROUTES.LOGIN} >\n                        {props.logged ? \"Log Out\" : \"Log In\"}\n                    </Link>\n                </div>\n                <div className=\"link-handler\">\n                    <Link className=\"link-route link-no-style link-blue\" to={ROUTES.SIGN_UP}>\n                        Sign Up\n                    </Link> \n                </div>\n            </div>\n            {props.connectedUser? followButton() : ''}\n            {props.logged? listFollows() : ''}\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}