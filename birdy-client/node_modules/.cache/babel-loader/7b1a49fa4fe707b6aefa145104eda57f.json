{"ast":null,"code":"var _jsxFileName = \"/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar/NavBar.js\";\nimport Timeline from \"../components/Timeline/Timeline.js\";\nimport SideBar from \"../components/SideBar/SideBar.js\";\n/* images */\n\nimport logoHome from \"../images/icons/navBarIcons/outline_home_white_24dp_2x.png\";\nimport logoExplore from \"../images/icons/navBarIcons/outline_tag_white_24dp_2x.png\";\nimport logoNotifications from \"../images/icons/navBarIcons/outline_notifications_white_24dp_2x.png\";\nimport logoMessages from \"../images/icons/navBarIcons/outline_email_white_24dp_2x.png\";\nimport logoBookmark from \"../images/icons/navBarIcons/outline_bookmark_border_white_24dp_2x.png\";\nimport logoLists from \"../images/icons/navBarIcons/outline_list_alt_white_24dp_2x.png\";\nimport logoProfile from \"../images/icons/navBarIcons/outline_person_white_24dp_2x.png\";\nimport logoMoreOptions from \"../images/icons/navBarIcons/outline_more_horiz_white_24dp_2x.png\"; // import { tweets } from \"../database/tweets.js\";\n// import { users } from \"../database/users.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_NB_TWEETS = 100;\nexport default function Profile(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = \"Profile - Birdy\";\n\n    async function getListTweets(props) {\n      await axios.get(`/apiTweet/tweet/getNTweets/${MAX_NB_TWEETS}`).then(res => {\n        //console.log('tweets: ', res.data);\n        setTweets(res.data);\n      });\n    }\n\n    getListTweets();\n  }, []);\n\n  async function getTweetsIfAlreadyLogged() {\n    var _props$location;\n\n    if ((_props$location = props.location) !== null && _props$location !== void 0 && _props$location.state.alreadyLogged) {\n      const author = props.location.state.userId;\n      await axios.get(`/apiTweet/tweet/${author}/${MAX_NB_TWEETS}`).then(res => {\n        console.log('test already logged');\n        setTweets(res.data);\n      });\n    }\n  }\n\n  const [tweets, setTweets] = useState([]);\n  getTweetsIfAlreadyLogged();\n  const menuIcons = [{\n    id: \"profile-home\",\n    src: logoHome,\n    alt: \"home menu\",\n    msg: \"Home\",\n    onClick: scrollToTop\n  }, {\n    id: \"profile-explore\",\n    src: logoExplore,\n    alt: \"explore menu\",\n    msg: \"Explore\"\n  }, {\n    id: \"profile-notifications\",\n    src: logoNotifications,\n    alt: \"notification menu\",\n    msg: \"Notifications\"\n  }, {\n    id: \"profile-messages\",\n    src: logoMessages,\n    alt: \"messages menu\",\n    msg: \"Messages\"\n  }, {\n    id: \"profile-bookmarks\",\n    src: logoBookmark,\n    alt: \"bookmarks menu\",\n    msg: \"Bookmarks\"\n  }, {\n    id: \"profile-lists\",\n    src: logoLists,\n    alt: \"lists menu\",\n    msg: \"Lists\"\n  }, {\n    id: \"profile-profile\",\n    src: logoProfile,\n    alt: \"profile menu\",\n    msg: \"Profile\"\n  }, {\n    id: \"profile-more\",\n    src: logoMoreOptions,\n    alt: \"more option menu\",\n    msg: \"More\"\n  }]; //console.log('params: ', useParams())\n\n  const user_id = useParams()['id'];\n  const [user, setUser] = useState(async () => {\n    await axios.get(`/api/user/${user_id}`).then(res => {\n      //console.log('user: ', res.data);\n      setUser(res.data);\n    });\n  });\n\n  function scrollToTop() {\n    document.getElementById(\"timeline-main\").scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile row max-height\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      logged: true,\n      menuIcons: menuIcons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n      scroll: scrollToTop,\n      default: false,\n      tweets: tweets,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      logged: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"i9VIcun9sqs7DikUnWdT8pt+BSk=\", false, function () {\n  return [useParams];\n});\n\n_c = Profile;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/mrbigoudi/Documents/Projects/Birdy/birdy-client/src/pages/Profile.js"],"names":["React","useEffect","useState","useParams","axios","NavBar","Timeline","SideBar","logoHome","logoExplore","logoNotifications","logoMessages","logoBookmark","logoLists","logoProfile","logoMoreOptions","MAX_NB_TWEETS","Profile","props","document","title","getListTweets","get","then","res","setTweets","data","getTweetsIfAlreadyLogged","location","state","alreadyLogged","author","userId","console","log","tweets","menuIcons","id","src","alt","msg","onClick","scrollToTop","user_id","user","setUser","getElementById","scrollTo","top","behavior"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport NavBar from \"../components/NavBar/NavBar.js\";\nimport Timeline from \"../components/Timeline/Timeline.js\";\nimport SideBar from \"../components/SideBar/SideBar.js\";\n\n/* images */\nimport logoHome from \"../images/icons/navBarIcons/outline_home_white_24dp_2x.png\";\nimport logoExplore from \"../images/icons/navBarIcons/outline_tag_white_24dp_2x.png\";\nimport logoNotifications from \"../images/icons/navBarIcons/outline_notifications_white_24dp_2x.png\";\nimport logoMessages from \"../images/icons/navBarIcons/outline_email_white_24dp_2x.png\";\nimport logoBookmark from \"../images/icons/navBarIcons/outline_bookmark_border_white_24dp_2x.png\";\nimport logoLists from \"../images/icons/navBarIcons/outline_list_alt_white_24dp_2x.png\";\nimport logoProfile from \"../images/icons/navBarIcons/outline_person_white_24dp_2x.png\";\nimport logoMoreOptions from \"../images/icons/navBarIcons/outline_more_horiz_white_24dp_2x.png\";\n\n// import { tweets } from \"../database/tweets.js\";\n// import { users } from \"../database/users.js\";\n\nconst MAX_NB_TWEETS = 100;\n\nexport default function Profile(props){\n    useEffect( () => {\n        document.title = \"Profile - Birdy\";\n        async function getListTweets(props) {\n            await axios\n                    .get(`/apiTweet/tweet/getNTweets/${MAX_NB_TWEETS}`)\n                    .then( (res) => {\n                        //console.log('tweets: ', res.data);\n                        setTweets(res.data);\n                    });\n            }\n        getListTweets();\n    }, []);\n\n    async function getTweetsIfAlreadyLogged(){\n        if(props.location?.state.alreadyLogged){\n            const author = props.location.state.userId;\n            await axios\n                .get(`/apiTweet/tweet/${author}/${MAX_NB_TWEETS}`)\n                .then( (res) => {\n                    console.log('test already logged');\n                    setTweets(res.data);\n                });\n        }\n    }\n\n    const [tweets, setTweets] = useState([]);\n\n    getTweetsIfAlreadyLogged();\n\n    const menuIcons = [\n        {id:\"profile-home\", src:logoHome, alt:\"home menu\", msg:\"Home\", onClick:scrollToTop},\n        {id:\"profile-explore\", src:logoExplore, alt:\"explore menu\", msg:\"Explore\"},\n        {id:\"profile-notifications\", src:logoNotifications, alt:\"notification menu\", msg:\"Notifications\"},\n        {id:\"profile-messages\", src:logoMessages, alt:\"messages menu\", msg:\"Messages\"},\n        {id:\"profile-bookmarks\", src:logoBookmark, alt:\"bookmarks menu\", msg:\"Bookmarks\"},\n        {id:\"profile-lists\", src:logoLists, alt:\"lists menu\", msg:\"Lists\"},\n        {id:\"profile-profile\", src:logoProfile, alt:\"profile menu\", msg:\"Profile\"},\n        {id:\"profile-more\", src:logoMoreOptions, alt:\"more option menu\", msg:\"More\"}\n    ];\n\n    //console.log('params: ', useParams())\n    const user_id = useParams()['id'];\n\n    const [user, setUser] = useState(\n        async () => {\n            await axios\n                .get(`/api/user/${user_id}`)\n                .then( (res) => {\n                    //console.log('user: ', res.data);\n                    setUser(res.data);\n                });\n        }\n    );\n\n    function scrollToTop() {\n        document.getElementById(\"timeline-main\").scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n\n    return(\n        <div className=\"profile row max-height\">\n            <NavBar logged={true} menuIcons={menuIcons}/>\n            <Timeline scroll={scrollToTop} default={false} tweets={tweets} user={user}/>\n            <SideBar logged={true}/>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}