{"ast":null,"code":"var _jsxFileName = \"/home/yannis/Documents/Project/ProjectWeb/birdy/src/components/Timeline/NewTweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FilePicker } from \"react-file-picker\";\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTweet(props) {\n  _s();\n\n  const [tweetContent, setTweetContent] = useState({\n    text: \"\",\n    image: \"\"\n  });\n  const [error, setError] = useState(true);\n\n  const handlePostTweet = async event => {\n    //console.log(\"handlePostTweet\");\n    event.preventDefault();\n\n    if (!error) {\n      await props.user.createTweet(tweetContent.text, tweetContent.image);\n      clearNewTweet();\n      props.onPost(event);\n    }\n  };\n\n  function handleChange(event) {\n    setTweetContent(prev => {\n      return { ...prev,\n        [event.target.name]: event.target.value\n      };\n    });\n    setError(prev => {\n      if (tweetContent.text !== \"\" || tweetContent.image !== \"\") {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  ;\n\n  function imageChange(fileName) {\n    setTweetContent(prev => {\n      return { ...prev,\n        image: fileName\n      };\n    });\n  }\n\n  function clearNewTweet() {\n    setTweetContent(prev => {\n      return {\n        text: \"\",\n        image: \"\"\n      };\n    });\n    setError(prev => true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet new-tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.user.getProfilePicture(),\n        alt: \"profile picture\",\n        height: \"70\",\n        width: \"70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"tweet-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-pink bold huge-font\",\n          children: props.user.getUsername()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"tweet-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"new-tweet-text\",\n          placeholder: \"What's happening ?\",\n          required: true,\n          maxLength: \"140\",\n          rows: \"3\",\n          name: \"text\",\n          onChange: handleChange,\n          value: tweetContent.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"tweet-footer\",\n          children: [/*#__PURE__*/_jsxDEV(FilePicker, {\n            extensions: [\"png\", \"jpg\"],\n            onChange: FileObject => imageChange(FileObject.name),\n            onError: errMsg => console.log(errMsg),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"\",\n              children: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            onClick: event => handlePostTweet(event),\n            type: \"button\",\n            value: \"Tweet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTweet, \"k3wjvdkeqblL9/wVEIp9HHapuko=\");\n\n_c = NewTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTweet\");","map":{"version":3,"sources":["/home/yannis/Documents/Project/ProjectWeb/birdy/src/components/Timeline/NewTweet.js"],"names":["React","useState","FilePicker","NewTweet","props","tweetContent","setTweetContent","text","image","error","setError","handlePostTweet","event","preventDefault","user","createTweet","clearNewTweet","onPost","handleChange","prev","target","name","value","imageChange","fileName","getProfilePicture","getUsername","FileObject","errMsg","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { FilePicker } from \"react-file-picker\";\n\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\n\nexport default function NewTweet(props){\n\n    const [tweetContent, setTweetContent] = useState(\n        {text:\"\", image:\"\"}\n    );\n\n    const [error, setError] = useState(true);\n\n    const handlePostTweet = async (event) => {\n        //console.log(\"handlePostTweet\");\n        event.preventDefault();\n        if(!error){\n            await props.user.createTweet(tweetContent.text, tweetContent.image);\n            clearNewTweet();\n            props.onPost(event);\n        }\n    }\n\n    function handleChange(event){\n        setTweetContent( prev => {\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            };\n        });\n        setError(prev => {\n            if(tweetContent.text!==\"\" || tweetContent.image!==\"\"){\n                return false;\n            }\n            return true;\n        });\n    };\n\n    function imageChange(fileName){\n        setTweetContent( prev => {\n            return {\n                ...prev,\n                image: fileName\n            };\n        });\n    }\n\n    function clearNewTweet(){\n        setTweetContent(prev => {return {text:\"\", image:\"\"};});\n        setError(prev => true);\n    }\n\n    return(\n        <div className=\"tweet new-tweet\">\n            <div className=\"left-side-tweet\">\n            <img src={props.user.getProfilePicture()}\n                    alt=\"profile picture\"\n                    height=\"70\" width=\"70\"\n                />\n            </div>\n            <div className=\"new-tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold huge-font\">\n                        {props.user.getUsername()}\n                    </span>\n                </header>\n                <form className=\"tweet-content\">\n                    <textarea className=\"new-tweet-text\" \n                        placeholder=\"What's happening ?\" required \n                        maxLength=\"140\" rows=\"3\"\n                        name=\"text\"\n                        onChange={handleChange}\n                        value={tweetContent.text}\n                    />\n                    <footer className=\"tweet-footer\">\n                        <FilePicker\n                            extensions={[\"png\",\"jpg\"]}\n                            onChange={FileObject => imageChange(FileObject.name)}\n                            onError={errMsg => console.log(errMsg)}\n                        >\n                            <button className=\"\">img</button>\n                        </FilePicker>\n                        <input className=\"submit\" onClick={ (event) => handlePostTweet(event) } type=\"button\" value=\"Tweet\"/>\n                    </footer>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}