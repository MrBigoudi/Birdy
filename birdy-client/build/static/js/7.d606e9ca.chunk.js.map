{"version":3,"sources":["pages/Login.js"],"names":["Login","navigate","useNavigate","useState","emailAddress","passwd","formData","setFormData","error","setError","isInvalid","handleChange","event","prev","target","name","value","useEffect","document","title","answer_login","res","a","data","console","log","_id","state","replace","answer_login_err","err","response","status","headers","request","message","config","handleLogin","preventDefault","axios","post","then","catch","className","onSubmit","type","placeholder","onChange","disabled","to","ROUTES"],"mappings":"2RAYe,SAASA,IAEpB,IAAMC,EAAWC,cAEjB,EAAgCC,mBAC5B,CAACC,aAAa,GAAIC,OAAO,KAD7B,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAgC,KAApBJ,EAASD,QAA2C,KAA1BC,EAASF,aAMrD,SAASO,EAAaC,GAClBL,GAAa,SAAAM,GACT,OAAO,2BACAA,GADP,kBAEKD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,WAR9CC,qBAAW,WACPC,SAASC,MAAQ,kBAClB,IAWH,IAAMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDAES,MAAvBD,EAAIE,KAAJ,QACCd,EAASY,EAAIE,KAAJ,SACTC,QAAQC,IAAI,UAAWjB,KAEjBkB,EAAML,EAAIE,KAAJ,GAEZtB,EAAS,MAAD,OAAOyB,GAAO,CAAEC,MAAO,GAAIC,SAAS,KAR/B,2CAAH,sDAYZC,EAAmB,SAACC,GAClBA,EAAIC,UAGJP,QAAQC,IAAI,sBAA0BK,EAAIC,SAASR,MACnDC,QAAQC,IAAI,wBAA0BK,EAAIC,SAASC,QACnDR,QAAQC,IAAI,yBAA0BK,EAAIC,SAASE,SACnDxB,EAASqB,EAAIC,SAASR,KAAb,SACkB,MAAxBO,EAAIC,SAASC,QACZzB,GAAa,SAAAM,GAAS,OAAO,2BAAIA,GAAX,IAAiBR,OAAO,SAE3CyB,EAAII,QAIXV,QAAQC,IAAIK,EAAII,SAGhBV,QAAQC,IAAI,QAASK,EAAIK,SAG7BX,QAAQC,IAAIK,EAAIM,SAGdC,EAAW,uCAAG,WAAOzB,GAAP,SAAAU,EAAA,sDAChBV,EAAM0B,iBACNC,IACKC,KAAK,kBAAmBlC,GACxBmC,MAAM,SAACpB,GAEJD,EAAaC,MAEhBqB,OAAO,SAACZ,GAELD,EAAiBC,MAVT,2CAAH,sDAcjB,OACI,uBAAMa,UAAU,8BAAhB,UACI,sBAAKA,UAAU,8BAAf,UACI,cAAC,IAAD,IACA,uBAAMA,UAAU,mBAAmBC,SAAUP,EAA7C,UACI,uBACIM,UAAU,aACVE,KAAK,QACLC,YAAY,gBACZ,aAAW,2BACXC,SAAUpC,EACVI,KAAK,eACLC,MAAOV,EAASF,eAEpB,uBACIuC,UAAU,aACVE,KAAK,WACLC,YAAY,WACZ,aAAW,sBACXC,SAAUpC,EACVI,KAAK,SACLC,MAAOV,EAASD,SAEpB,uBACIsC,UAAS,sBAAkBjC,EAAa,iBAAqB,UAC7DmC,KAAK,SACL7B,MAAM,SACNgC,SAAUtC,OAGjBF,GAAS,mBAAGmC,UAAU,2BAAb,SAAyCnC,OAEvD,qBAAKmC,UAAU,mBAAf,SACI,6DAEI,cAAC,IAAD,CAAMA,UAAU,aAAaM,GAAIC,IAAjC,+B","file":"static/js/7.d606e9ca.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport * as ROUTES from \"../constants/routes.js\";\n// import * as ERROR_MSG from \"../constants/errorMessages.js\";\n\nimport BirdyLogo from \"../atomComponents/Birdy-logo.js\";\nimport \"../stylesheets/form.css\";\n\n// import { checkLogin } from \"../database/users.js\";\n\nexport default function Login(){\n\n    const navigate = useNavigate();\n\n    const [formData, setFormData] = useState(\n        {emailAddress:\"\", passwd:\"\"}\n    );\n\n    const [error, setError] = useState(\"\");\n\n    const isInvalid = formData.passwd === \"\" || formData.emailAddress === \"\";\n\n    useEffect( () => {\n        document.title = \"Login - Birdy\";\n    }, []);\n\n    function handleChange(event){\n        setFormData( prev => {\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            }\n        })\n    };\n\n    const answer_login = async (res) => {\n        //console.log('res.data: ', res.data);\n        if(res.data['status'] !== 200){\n            setError(res.data['message']);\n            console.log('error: ', error);\n        }else{\n            const _id = res.data['id'];\n            //console.log('user_id: ', _id);\n            navigate(`/p/${_id}`, { state: {}, replace: true, });\n        }\n    }\n\n    const answer_login_err = (err) => {\n        if (err.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log('err.response.data: ',    err.response.data);\n            console.log('err.response.status: ',  err.response.status);\n            console.log('err.response.headers: ', err.response.headers);\n            setError(err.response.data['message']);\n            if(err.response.status === 403){\n                setFormData( prev => {return {...prev, passwd:\"\"}});\n            }\n        } else if (err.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(err.request);\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', err.message);\n        }\n        \n        console.log(err.config);\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        axios\n            .post(\"/api/user/login\", formData)\n            .then( (res) => {\n                //console.log('then');\n                answer_login(res);\n            })\n            .catch( (err) => {\n                //console.log('catch');\n                answer_login_err(err);\n            });\n    }\n\n    return(\n        <main className=\"form-page-main column gap20\">\n            <div className=\"form-container column gap20\">\n                <BirdyLogo />\n                <form className=\"base-form column\" onSubmit={handleLogin}>\n                    <input\n                        className=\"form-input\" \n                        type=\"email\" \n                        placeholder=\"Email address\" \n                        aria-label=\"Enter your email address\"\n                        onChange={handleChange}\n                        name=\"emailAddress\"\n                        value={formData.emailAddress}\n                    />\n                    <input\n                        className=\"form-input\" \n                        type=\"password\" \n                        placeholder=\"Password\" \n                        aria-label=\"Enter your password\"\n                        onChange={handleChange}\n                        name=\"passwd\"\n                        value={formData.passwd}                        \n                    />\n                    <input \n                        className={`form-submit ${(isInvalid && \"submit-invalid\") || \"submit\"}`}\n                        type=\"submit\" \n                        value=\"Log In\"\n                        disabled={isInvalid}\n                    />\n                </form>\n                {error && <p className=\"error-message form-error\">{error}</p>}\n            </div>\n            <div className=\"base-form-footer\">\n                <p>\n                    Don't have an account?&ensp;\n                    <Link className=\"link-route\" to={ROUTES.SIGN_UP}>\n                        Sign up\n                    </Link>\n                </p>\n            </div>\n        </main>\n    )\n};"],"sourceRoot":""}