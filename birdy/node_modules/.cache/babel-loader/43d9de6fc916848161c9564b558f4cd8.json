{"ast":null,"code":"var _jsxFileName = \"/home/yannis/Documents/Project/ProjectWeb/birdy/src/components/Timeline/NewTweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTweet(props) {\n  _s();\n\n  const [tweetContent, setTweetContent] = useState({\n    text: \"\",\n    image: \"\",\n    imageDom: \"\"\n  });\n  const [error, setError] = useState(true);\n\n  const handlePostTweet = async event => {\n    //console.log(\"handlePostTweet\");\n    event.preventDefault(); //console.log(tweetContent);\n\n    if (!error) {\n      await props.user.createTweet(tweetContent.text, tweetContent.image);\n      clearNewTweet();\n      props.onPost(event);\n    }\n  };\n\n  function resetError() {\n    setError(prev => {\n      if (tweetContent.text !== \"\" || tweetContent.image !== \"\") {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  function removeError() {\n    setError(false);\n  }\n\n  function handleChange(event) {\n    setTweetContent(prev => {\n      //console.log(\"[\",event.target.name,\",\",event.target.value,\"]\");\n      return { ...prev,\n        [event.target.name]: event.target.value\n      };\n    }); //console.log(\"onChange: error?\", error);\n\n    resetError();\n  }\n\n  ;\n\n  function onImageChange(event) {\n    if (event.target.files && event.target.files[0]) {\n      const img = event.target.files[0]; //console.log(img);\n      //console.log(URL.createObjectURL(img));\n\n      setTweetContent(prev => {\n        return { ...prev,\n          image: URL.createObjectURL(img)\n        };\n      });\n    } //console.log(\"onImage: error?\", error);\n\n\n    removeError();\n  }\n\n  function clearNewTweet() {\n    setTweetContent(prev => {\n      return {\n        text: \"\",\n        image: \"\",\n        imageDom: \"\"\n      };\n    });\n    setError(prev => true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet new-tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side-tweet\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.user.getProfilePicture(),\n        alt: \"profile picture\",\n        height: \"70\",\n        width: \"70\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"tweet-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-light-pink bold huge-font\",\n          children: props.user.getUsername()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet-content\",\n          children: [tweetContent.image != \"\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"tweet-image\",\n            src: tweetContent.image,\n            width: \"250px\",\n            alt: \"not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"new-tweet-text\",\n            placeholder: \"What's happening ?\",\n            required: true,\n            maxLength: \"140\",\n            rows: \"2\",\n            name: \"text\",\n            onChange: handleChange,\n            value: tweetContent.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"tweet-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"new-tweet-image-selector\",\n            htmlFor: \"imageFile\",\n            children: \"Img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imageDom\",\n            id: \"imageFile\",\n            className: \"image-selector\",\n            accept: \"image/*\",\n            onChange: event => {\n              handleChange(event);\n              onImageChange(event);\n            },\n            value: tweetContent.imageDom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            onClick: event => handlePostTweet(event),\n            type: \"button\",\n            value: \"Tweet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTweet, \"mvPAJxsrvHIkPTOLGGQtBMMWrtA=\");\n\n_c = NewTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTweet\");","map":{"version":3,"sources":["/home/yannis/Documents/Project/ProjectWeb/birdy/src/components/Timeline/NewTweet.js"],"names":["React","useState","NewTweet","props","tweetContent","setTweetContent","text","image","imageDom","error","setError","handlePostTweet","event","preventDefault","user","createTweet","clearNewTweet","onPost","resetError","prev","removeError","handleChange","target","name","value","onImageChange","files","img","URL","createObjectURL","getProfilePicture","getUsername"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"../../stylesheets/components/tweet.css\";\nimport \"../../stylesheets/components/newTweet.css\";\nimport \"../../stylesheets/form.css\";\n\nexport default function NewTweet(props){\n\n    const [tweetContent, setTweetContent] = useState(\n        {text:\"\", image:\"\", imageDom:\"\"}\n    );\n\n    const [error, setError] = useState(true);\n\n    const handlePostTweet = async (event) => {\n        //console.log(\"handlePostTweet\");\n        event.preventDefault();\n        //console.log(tweetContent);\n        if(!error){\n            await props.user.createTweet(tweetContent.text, tweetContent.image);\n            clearNewTweet();\n            props.onPost(event);\n        }\n    }\n\n    function resetError(){\n        setError(prev => {\n            if(tweetContent.text!==\"\" || tweetContent.image!==\"\"){\n                return false;\n            }\n            return true;\n        });\n    }\n\n    function removeError(){\n        setError(false);\n    }\n\n    function handleChange(event){\n        setTweetContent( prev => {\n            //console.log(\"[\",event.target.name,\",\",event.target.value,\"]\");\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            };\n        });\n        //console.log(\"onChange: error?\", error);\n        resetError();\n    };\n\n    function onImageChange(event){\n        if(event.target.files && event.target.files[0]){\n            const img = event.target.files[0];\n            //console.log(img);\n            //console.log(URL.createObjectURL(img));\n            setTweetContent( prev => {\n                return {\n                    ...prev,\n                    image: URL.createObjectURL(img)\n                };\n            });\n        }\n        //console.log(\"onImage: error?\", error);\n        removeError();\n    }\n\n    function clearNewTweet(){\n        setTweetContent(prev => {return {text:\"\", image:\"\", imageDom:\"\"};});\n        setError(prev => true);\n    }\n\n    return(\n        <div className=\"tweet new-tweet\">\n            <div className=\"left-side-tweet\">\n            <img src={props.user.getProfilePicture()}\n                    alt=\"profile picture\"\n                    height=\"70\" width=\"70\"\n                />\n            </div>\n            <div className=\"new-tweet-container\">\n                <header className=\"tweet-header\">\n                    <span className=\"color-light-pink bold huge-font\">\n                        {props.user.getUsername()}\n                    </span>\n                </header>\n                <form>\n                    <div className=\"tweet-content\">\n                        {tweetContent.image!=\"\" && <img className=\"tweet-image\" src={tweetContent.image} width={\"250px\"} alt=\"not found\"/>}\n                        <textarea className=\"new-tweet-text\" \n                            placeholder=\"What's happening ?\" required \n                            maxLength=\"140\" rows=\"2\"\n                            name=\"text\"\n                            onChange={handleChange}\n                            value={tweetContent.text}\n                        />\n                    </div>\n                    <footer className=\"tweet-footer\">\n                        <label className=\"new-tweet-image-selector\" htmlFor=\"imageFile\">Img</label>\n                        <input \n                            type=\"file\" name=\"imageDom\" id=\"imageFile\" \n                            className=\"image-selector\" \n                            accept=\"image/*\"\n                            onChange={(event) => {handleChange(event); onImageChange(event);}}\n                            value={tweetContent.imageDom}\n                        />\n                        <input className=\"submit\" onClick={ (event) => handlePostTweet(event) } type=\"button\" value=\"Tweet\"/>\n                    </footer>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}